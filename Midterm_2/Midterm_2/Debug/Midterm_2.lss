
Midterm_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800100  00000ee2  00000f76  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ee2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000b  00800130  00800130  00000fa6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000fa6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001004  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000100  00000000  00000000  00001044  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d00  00000000  00000000  00001144  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ad3  00000000  00000000  00002e44  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000956  00000000  00000000  00003917  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000318  00000000  00000000  00004270  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000757  00000000  00000000  00004588  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e9c  00000000  00000000  00004cdf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00005b7b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 9b 00 	jmp	0x136	; 0x136 <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 ee       	ldi	r30, 0xE2	; 226
  7c:	fe e0       	ldi	r31, 0x0E	; 14
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 33       	cpi	r26, 0x30	; 48
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e3       	ldi	r26, 0x30	; 48
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ab 33       	cpi	r26, 0x3B	; 59
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 ba 00 	call	0x174	; 0x174 <main>
  9e:	0c 94 6f 07 	jmp	0xede	; 0xede <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <put_char>:
	UCSR0C |= (1 << UCSZ01) | (1 << UCSZ00); //set data frame: 8 bit, 1 stop
}

static int put_char(char c, FILE *stream)
{
	while(!(UCSR0A &(1<<UDRE0))); // wait for UDR to be clear
  a6:	e0 ec       	ldi	r30, 0xC0	; 192
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	90 81       	ld	r25, Z
  ac:	95 ff       	sbrs	r25, 5
  ae:	fd cf       	rjmp	.-6      	; 0xaa <put_char+0x4>
	UDR0 = c;    //send the character
  b0:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
  b4:	80 e0       	ldi	r24, 0x00	; 0
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	08 95       	ret

000000ba <setup_rf>:
		}
	}
	return 0;
}

nRF24L01 *setup_rf(void) {
  ba:	cf 93       	push	r28
  bc:	df 93       	push	r29
	nRF24L01 *rf = nRF24L01_init();
  be:	0e 94 45 01 	call	0x28a	; 0x28a <nRF24L01_init>
  c2:	ec 01       	movw	r28, r24
	rf->ss.port = &PORTB;
  c4:	85 e2       	ldi	r24, 0x25	; 37
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	99 83       	std	Y+1, r25	; 0x01
  ca:	88 83       	st	Y, r24
	rf->ss.pin = PB2;
  cc:	22 e0       	ldi	r18, 0x02	; 2
  ce:	2a 83       	std	Y+2, r18	; 0x02
	rf->ce.port = &PORTB;
  d0:	9c 83       	std	Y+4, r25	; 0x04
  d2:	8b 83       	std	Y+3, r24	; 0x03
	rf->ce.pin = PB1;
  d4:	21 e0       	ldi	r18, 0x01	; 1
  d6:	2d 83       	std	Y+5, r18	; 0x05
	rf->sck.port = &PORTB;
  d8:	9f 83       	std	Y+7, r25	; 0x07
  da:	8e 83       	std	Y+6, r24	; 0x06
	rf->sck.pin = PB5;
  dc:	25 e0       	ldi	r18, 0x05	; 5
  de:	28 87       	std	Y+8, r18	; 0x08
	rf->mosi.port = &PORTB;
  e0:	9a 87       	std	Y+10, r25	; 0x0a
  e2:	89 87       	std	Y+9, r24	; 0x09
	rf->mosi.pin = PB3;
  e4:	23 e0       	ldi	r18, 0x03	; 3
  e6:	2b 87       	std	Y+11, r18	; 0x0b
	rf->miso.port = &PORTB;
  e8:	9d 87       	std	Y+13, r25	; 0x0d
  ea:	8c 87       	std	Y+12, r24	; 0x0c
	rf->miso.pin = PB4;
  ec:	84 e0       	ldi	r24, 0x04	; 4
  ee:	8e 87       	std	Y+14, r24	; 0x0e
	// interrupt on falling edge of INT0 (PD2)
	EICRA |= _BV(ISC01);
  f0:	e9 e6       	ldi	r30, 0x69	; 105
  f2:	f0 e0       	ldi	r31, 0x00	; 0
  f4:	80 81       	ld	r24, Z
  f6:	82 60       	ori	r24, 0x02	; 2
  f8:	80 83       	st	Z, r24
	EIMSK |= _BV(INT0);
  fa:	e8 9a       	sbi	0x1d, 0	; 29
	nRF24L01_begin(rf);
  fc:	ce 01       	movw	r24, r28
  fe:	0e 94 35 02 	call	0x46a	; 0x46a <nRF24L01_begin>
	return rf;
}
 102:	ce 01       	movw	r24, r28
 104:	df 91       	pop	r29
 106:	cf 91       	pop	r28
 108:	08 95       	ret

0000010a <process_message>:

void process_message(char *message) {
 10a:	cf 93       	push	r28
 10c:	df 93       	push	r29
 10e:	ec 01       	movw	r28, r24
	if (strcmp(message, "ON") == 0)
 110:	69 e1       	ldi	r22, 0x19	; 25
 112:	71 e0       	ldi	r23, 0x01	; 1
 114:	0e 94 81 04 	call	0x902	; 0x902 <strcmp>
 118:	89 2b       	or	r24, r25
 11a:	11 f4       	brne	.+4      	; 0x120 <process_message+0x16>
	DDRB |= _BV(PB0);
	PORTB &= ~_BV(PB0);
}

inline void set_led_high(void) {
	PORTB |= _BV(PB0);
 11c:	28 9a       	sbi	0x05, 0	; 5
 11e:	08 c0       	rjmp	.+16     	; 0x130 <process_message+0x26>
}

void process_message(char *message) {
	if (strcmp(message, "ON") == 0)
	set_led_high();
	else if (strcmp(message, "OFF") == 0)
 120:	6c e1       	ldi	r22, 0x1C	; 28
 122:	71 e0       	ldi	r23, 0x01	; 1
 124:	ce 01       	movw	r24, r28
 126:	0e 94 81 04 	call	0x902	; 0x902 <strcmp>
 12a:	89 2b       	or	r24, r25
 12c:	09 f4       	brne	.+2      	; 0x130 <process_message+0x26>
inline void set_led_high(void) {
	PORTB |= _BV(PB0);
}

inline void set_led_low(void) {
	PORTB &= ~_BV(PB0);
 12e:	28 98       	cbi	0x05, 0	; 5
void process_message(char *message) {
	if (strcmp(message, "ON") == 0)
	set_led_high();
	else if (strcmp(message, "OFF") == 0)
	set_led_low();
}
 130:	df 91       	pop	r29
 132:	cf 91       	pop	r28
 134:	08 95       	ret

00000136 <__vector_1>:
inline void set_led_low(void) {
	PORTB &= ~_BV(PB0);
}

// nRF24L01 interrupt
ISR(INT0_vect) {
 136:	1f 92       	push	r1
 138:	0f 92       	push	r0
 13a:	0f b6       	in	r0, 0x3f	; 63
 13c:	0f 92       	push	r0
 13e:	11 24       	eor	r1, r1
 140:	8f 93       	push	r24
	rf_interrupt = true;
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <__data_end>
}
 148:	8f 91       	pop	r24
 14a:	0f 90       	pop	r0
 14c:	0f be       	out	0x3f, r0	; 63
 14e:	0f 90       	pop	r0
 150:	1f 90       	pop	r1
 152:	18 95       	reti

00000154 <init_USART>:
void init_USART(){
	unsigned int BAUDrate;

	//set BAUD rate: UBRR = [F_CPU/(16*BAUD)]-1
	BAUDrate = ((F_CPU/16)/BAUD) - 1;
	UBRR0H = (unsigned char) (BAUDrate >> 8); //shift top 8 bits into UBRR0H
 154:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char) BAUDrate; //shift rest of 8 bits into UBRR0L
 158:	83 e3       	ldi	r24, 0x33	; 51
 15a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0); //enable receiver and trasmitter
 15e:	e1 ec       	ldi	r30, 0xC1	; 193
 160:	f0 e0       	ldi	r31, 0x00	; 0
 162:	80 81       	ld	r24, Z
 164:	88 61       	ori	r24, 0x18	; 24
 166:	80 83       	st	Z, r24
	// UCSR0B |= (1 << RXCIE0); //enable receiver interrupt
	UCSR0C |= (1 << UCSZ01) | (1 << UCSZ00); //set data frame: 8 bit, 1 stop
 168:	e2 ec       	ldi	r30, 0xC2	; 194
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	80 81       	ld	r24, Z
 16e:	86 60       	ori	r24, 0x06	; 6
 170:	80 83       	st	Z, r24
 172:	08 95       	ret

00000174 <main>:
//Used for printf to USART
static int put_char(char c, FILE *stream);
static FILE mystdout = FDEV_SETUP_STREAM(put_char, NULL, _FDEV_SETUP_WRITE);
void init_USART();

int main(void) {
 174:	cf 93       	push	r28
 176:	df 93       	push	r29
 178:	cd b7       	in	r28, 0x3d	; 61
 17a:	de b7       	in	r29, 0x3e	; 62
 17c:	ad 97       	sbiw	r28, 0x2d	; 45
 17e:	0f b6       	in	r0, 0x3f	; 63
 180:	f8 94       	cli
 182:	de bf       	out	0x3e, r29	; 62
 184:	0f be       	out	0x3f, r0	; 63
 186:	cd bf       	out	0x3d, r28	; 61
	stdout = &mystdout; //set the output stream
 188:	86 e0       	ldi	r24, 0x06	; 6
 18a:	91 e0       	ldi	r25, 0x01	; 1
 18c:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <__iob+0x3>
 190:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <__iob+0x2>
	init_USART();  
 194:	0e 94 aa 00 	call	0x154	; 0x154 <init_USART>
	
	uint8_t address[5] = { 0x01, 0x01, 0x01, 0x01, 0x01 };
 198:	85 e0       	ldi	r24, 0x05	; 5
 19a:	e4 e1       	ldi	r30, 0x14	; 20
 19c:	f1 e0       	ldi	r31, 0x01	; 1
 19e:	de 01       	movw	r26, r28
 1a0:	11 96       	adiw	r26, 0x01	; 1
 1a2:	01 90       	ld	r0, Z+
 1a4:	0d 92       	st	X+, r0
 1a6:	8a 95       	dec	r24
 1a8:	e1 f7       	brne	.-8      	; 0x1a2 <main+0x2e>
	else if (strcmp(message, "OFF") == 0)
	set_led_low();
}

inline void prepare_led_pin(void) {
	DDRB |= _BV(PB0);
 1aa:	20 9a       	sbi	0x04, 0	; 4
	PORTB &= ~_BV(PB0);
 1ac:	28 98       	cbi	0x05, 0	; 5
	stdout = &mystdout; //set the output stream
	init_USART();  
	
	uint8_t address[5] = { 0x01, 0x01, 0x01, 0x01, 0x01 };
	prepare_led_pin();
	sei();
 1ae:	78 94       	sei
	nRF24L01 *rf = setup_rf();
 1b0:	0e 94 5d 00 	call	0xba	; 0xba <setup_rf>
 1b4:	8c 01       	movw	r16, r24
	nRF24L01_listen(rf, 0, address);
 1b6:	ae 01       	movw	r20, r28
 1b8:	4f 5f       	subi	r20, 0xFF	; 255
 1ba:	5f 4f       	sbci	r21, 0xFF	; 255
 1bc:	60 e0       	ldi	r22, 0x00	; 0
 1be:	70 e0       	ldi	r23, 0x00	; 0
 1c0:	0e 94 9c 01 	call	0x338	; 0x338 <nRF24L01_listen>
	uint8_t addr[5];
	nRF24L01_read_register(rf, CONFIG, addr, 1);
 1c4:	21 e0       	ldi	r18, 0x01	; 1
 1c6:	30 e0       	ldi	r19, 0x00	; 0
 1c8:	ae 01       	movw	r20, r28
 1ca:	4a 5f       	subi	r20, 0xFA	; 250
 1cc:	5f 4f       	sbci	r21, 0xFF	; 255
 1ce:	60 e0       	ldi	r22, 0x00	; 0
 1d0:	c8 01       	movw	r24, r16
 1d2:	0e 94 8e 01 	call	0x31c	; 0x31c <nRF24L01_read_register>
		if (rf_interrupt) {
			rf_interrupt = false;
			while (nRF24L01_data_received(rf)) {
				nRF24L01Message msg;
				nRF24L01_read_received_data(rf, &msg);
				process_message((char *)msg.data);
 1d6:	7e 01       	movw	r14, r28
 1d8:	2d e0       	ldi	r18, 0x0D	; 13
 1da:	e2 0e       	add	r14, r18
 1dc:	f1 1c       	adc	r15, r1
				printf("Received: "); 
 1de:	0f 2e       	mov	r0, r31
 1e0:	f0 e2       	ldi	r31, 0x20	; 32
 1e2:	af 2e       	mov	r10, r31
 1e4:	f1 e0       	ldi	r31, 0x01	; 1
 1e6:	bf 2e       	mov	r11, r31
 1e8:	f0 2d       	mov	r31, r0
				printf("%" PRId8 "\n",(unsigned int) msg.data); //print temperature received
 1ea:	0f 2e       	mov	r0, r31
 1ec:	fb e2       	ldi	r31, 0x2B	; 43
 1ee:	cf 2e       	mov	r12, r31
 1f0:	f1 e0       	ldi	r31, 0x01	; 1
 1f2:	df 2e       	mov	r13, r31
 1f4:	f0 2d       	mov	r31, r0
		if (rf_interrupt) {
			rf_interrupt = false;
			while (nRF24L01_data_received(rf)) {
				nRF24L01Message msg;
				nRF24L01_read_received_data(rf, &msg);
				process_message((char *)msg.data);
 1f6:	8e 2c       	mov	r8, r14
 1f8:	9f 2c       	mov	r9, r15
	nRF24L01_listen(rf, 0, address);
	uint8_t addr[5];
	nRF24L01_read_register(rf, CONFIG, addr, 1);

	while (true) {
		if (rf_interrupt) {
 1fa:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <__data_end>
 1fe:	88 23       	and	r24, r24
 200:	e1 f3       	breq	.-8      	; 0x1fa <main+0x86>
			rf_interrupt = false;
 202:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <__data_end>
			while (nRF24L01_data_received(rf)) {
 206:	27 c0       	rjmp	.+78     	; 0x256 <main+0xe2>
				nRF24L01Message msg;
				nRF24L01_read_received_data(rf, &msg);
 208:	be 01       	movw	r22, r28
 20a:	65 5f       	subi	r22, 0xF5	; 245
 20c:	7f 4f       	sbci	r23, 0xFF	; 255
 20e:	c8 01       	movw	r24, r16
 210:	0e 94 30 03 	call	0x660	; 0x660 <nRF24L01_read_received_data>
				process_message((char *)msg.data);
 214:	88 2d       	mov	r24, r8
 216:	99 2d       	mov	r25, r9
 218:	0e 94 85 00 	call	0x10a	; 0x10a <process_message>
				printf("Received: "); 
 21c:	bf 92       	push	r11
 21e:	af 92       	push	r10
 220:	0e 94 8a 04 	call	0x914	; 0x914 <printf>
				printf("%" PRId8 "\n",(unsigned int) msg.data); //print temperature received
 224:	ff 92       	push	r15
 226:	ef 92       	push	r14
 228:	df 92       	push	r13
 22a:	cf 92       	push	r12
 22c:	0e 94 8a 04 	call	0x914	; 0x914 <printf>
				printf("F");		
 230:	86 e4       	ldi	r24, 0x46	; 70
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	0e 94 a0 04 	call	0x940	; 0x940 <putchar>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 238:	8f ef       	ldi	r24, 0xFF	; 255
 23a:	99 e6       	ldi	r25, 0x69	; 105
 23c:	28 e1       	ldi	r18, 0x18	; 24
 23e:	81 50       	subi	r24, 0x01	; 1
 240:	90 40       	sbci	r25, 0x00	; 0
 242:	20 40       	sbci	r18, 0x00	; 0
 244:	e1 f7       	brne	.-8      	; 0x23e <main+0xca>
 246:	00 c0       	rjmp	.+0      	; 0x248 <main+0xd4>
 248:	00 00       	nop
 24a:	0f 90       	pop	r0
 24c:	0f 90       	pop	r0
 24e:	0f 90       	pop	r0
 250:	0f 90       	pop	r0
 252:	0f 90       	pop	r0
 254:	0f 90       	pop	r0
	nRF24L01_read_register(rf, CONFIG, addr, 1);

	while (true) {
		if (rf_interrupt) {
			rf_interrupt = false;
			while (nRF24L01_data_received(rf)) {
 256:	c8 01       	movw	r24, r16
 258:	0e 94 03 02 	call	0x406	; 0x406 <nRF24L01_data_received>
 25c:	81 11       	cpse	r24, r1
 25e:	d4 cf       	rjmp	.-88     	; 0x208 <main+0x94>
				printf("%" PRId8 "\n",(unsigned int) msg.data); //print temperature received
				printf("F");		
				_delay_ms(1000);	
				}

			nRF24L01_listen(rf, 0, address);
 260:	ae 01       	movw	r20, r28
 262:	4f 5f       	subi	r20, 0xFF	; 255
 264:	5f 4f       	sbci	r21, 0xFF	; 255
 266:	60 e0       	ldi	r22, 0x00	; 0
 268:	70 e0       	ldi	r23, 0x00	; 0
 26a:	c8 01       	movw	r24, r16
 26c:	0e 94 9c 01 	call	0x338	; 0x338 <nRF24L01_listen>
 270:	c4 cf       	rjmp	.-120    	; 0x1fa <main+0x86>

00000272 <copy_address>:
 272:	fc 01       	movw	r30, r24
 274:	a6 2f       	mov	r26, r22
 276:	b7 2f       	mov	r27, r23
 278:	9c 01       	movw	r18, r24
 27a:	2b 5f       	subi	r18, 0xFB	; 251
 27c:	3f 4f       	sbci	r19, 0xFF	; 255
 27e:	91 91       	ld	r25, Z+
 280:	9d 93       	st	X+, r25
 282:	e2 17       	cp	r30, r18
 284:	f3 07       	cpc	r31, r19
 286:	d9 f7       	brne	.-10     	; 0x27e <copy_address+0xc>
 288:	08 95       	ret

0000028a <nRF24L01_init>:
 28a:	80 e1       	ldi	r24, 0x10	; 16
 28c:	90 e0       	ldi	r25, 0x00	; 0
 28e:	0e 94 60 03 	call	0x6c0	; 0x6c0 <malloc>
 292:	20 e1       	ldi	r18, 0x10	; 16
 294:	fc 01       	movw	r30, r24
 296:	11 92       	st	Z+, r1
 298:	2a 95       	dec	r18
 29a:	e9 f7       	brne	.-6      	; 0x296 <nRF24L01_init+0xc>
 29c:	08 95       	ret

0000029e <nRF24L01_send_command>:
 29e:	cf 93       	push	r28
 2a0:	df 93       	push	r29
 2a2:	ec 01       	movw	r28, r24
 2a4:	da 01       	movw	r26, r20
 2a6:	e8 81       	ld	r30, Y
 2a8:	f9 81       	ldd	r31, Y+1	; 0x01
 2aa:	50 81       	ld	r21, Z
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	0a 80       	ldd	r0, Y+2	; 0x02
 2b2:	02 c0       	rjmp	.+4      	; 0x2b8 <nRF24L01_send_command+0x1a>
 2b4:	88 0f       	add	r24, r24
 2b6:	99 1f       	adc	r25, r25
 2b8:	0a 94       	dec	r0
 2ba:	e2 f7       	brpl	.-8      	; 0x2b4 <nRF24L01_send_command+0x16>
 2bc:	80 95       	com	r24
 2be:	85 23       	and	r24, r21
 2c0:	80 83       	st	Z, r24
 2c2:	6e bd       	out	0x2e, r22	; 46
 2c4:	0d b4       	in	r0, 0x2d	; 45
 2c6:	07 fe       	sbrs	r0, 7
 2c8:	fd cf       	rjmp	.-6      	; 0x2c4 <nRF24L01_send_command+0x26>
 2ca:	8e b5       	in	r24, 0x2e	; 46
 2cc:	8f 87       	std	Y+15, r24	; 0x0f
 2ce:	21 15       	cp	r18, r1
 2d0:	31 05       	cpc	r19, r1
 2d2:	79 f0       	breq	.+30     	; 0x2f2 <nRF24L01_send_command+0x54>
 2d4:	fd 01       	movw	r30, r26
 2d6:	2a 0f       	add	r18, r26
 2d8:	3b 1f       	adc	r19, r27
 2da:	df 01       	movw	r26, r30
 2dc:	90 81       	ld	r25, Z
 2de:	9e bd       	out	0x2e, r25	; 46
 2e0:	0d b4       	in	r0, 0x2d	; 45
 2e2:	07 fe       	sbrs	r0, 7
 2e4:	fd cf       	rjmp	.-6      	; 0x2e0 <nRF24L01_send_command+0x42>
 2e6:	9e b5       	in	r25, 0x2e	; 46
 2e8:	9c 93       	st	X, r25
 2ea:	31 96       	adiw	r30, 0x01	; 1
 2ec:	e2 17       	cp	r30, r18
 2ee:	f3 07       	cpc	r31, r19
 2f0:	a1 f7       	brne	.-24     	; 0x2da <nRF24L01_send_command+0x3c>
 2f2:	e8 81       	ld	r30, Y
 2f4:	f9 81       	ldd	r31, Y+1	; 0x01
 2f6:	20 81       	ld	r18, Z
 2f8:	81 e0       	ldi	r24, 0x01	; 1
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	0a 80       	ldd	r0, Y+2	; 0x02
 2fe:	02 c0       	rjmp	.+4      	; 0x304 <nRF24L01_send_command+0x66>
 300:	88 0f       	add	r24, r24
 302:	99 1f       	adc	r25, r25
 304:	0a 94       	dec	r0
 306:	e2 f7       	brpl	.-8      	; 0x300 <nRF24L01_send_command+0x62>
 308:	82 2b       	or	r24, r18
 30a:	80 83       	st	Z, r24
 30c:	8f 85       	ldd	r24, Y+15	; 0x0f
 30e:	df 91       	pop	r29
 310:	cf 91       	pop	r28
 312:	08 95       	ret

00000314 <nRF24L01_write_register>:
 314:	60 62       	ori	r22, 0x20	; 32
 316:	0e 94 4f 01 	call	0x29e	; 0x29e <nRF24L01_send_command>
 31a:	08 95       	ret

0000031c <nRF24L01_read_register>:
 31c:	0e 94 4f 01 	call	0x29e	; 0x29e <nRF24L01_send_command>
 320:	08 95       	ret

00000322 <nRF24L01_no_op>:
 322:	20 e0       	ldi	r18, 0x00	; 0
 324:	30 e0       	ldi	r19, 0x00	; 0
 326:	40 e0       	ldi	r20, 0x00	; 0
 328:	50 e0       	ldi	r21, 0x00	; 0
 32a:	6f ef       	ldi	r22, 0xFF	; 255
 32c:	0e 94 4f 01 	call	0x29e	; 0x29e <nRF24L01_send_command>
 330:	08 95       	ret

00000332 <nRF24L01_update_status>:
 332:	0e 94 91 01 	call	0x322	; 0x322 <nRF24L01_no_op>
 336:	08 95       	ret

00000338 <nRF24L01_listen>:
 338:	df 92       	push	r13
 33a:	ef 92       	push	r14
 33c:	ff 92       	push	r15
 33e:	0f 93       	push	r16
 340:	1f 93       	push	r17
 342:	cf 93       	push	r28
 344:	df 93       	push	r29
 346:	00 d0       	rcall	.+0      	; 0x348 <nRF24L01_listen+0x10>
 348:	00 d0       	rcall	.+0      	; 0x34a <nRF24L01_listen+0x12>
 34a:	00 d0       	rcall	.+0      	; 0x34c <nRF24L01_listen+0x14>
 34c:	cd b7       	in	r28, 0x3d	; 61
 34e:	de b7       	in	r29, 0x3e	; 62
 350:	7c 01       	movw	r14, r24
 352:	d6 2e       	mov	r13, r22
 354:	ca 01       	movw	r24, r20
 356:	be 01       	movw	r22, r28
 358:	6f 5f       	subi	r22, 0xFF	; 255
 35a:	7f 4f       	sbci	r23, 0xFF	; 255
 35c:	0e 94 39 01 	call	0x272	; 0x272 <copy_address>
 360:	6a e0       	ldi	r22, 0x0A	; 10
 362:	6d 0d       	add	r22, r13
 364:	25 e0       	ldi	r18, 0x05	; 5
 366:	30 e0       	ldi	r19, 0x00	; 0
 368:	ae 01       	movw	r20, r28
 36a:	4f 5f       	subi	r20, 0xFF	; 255
 36c:	5f 4f       	sbci	r21, 0xFF	; 255
 36e:	c7 01       	movw	r24, r14
 370:	0e 94 8a 01 	call	0x314	; 0x314 <nRF24L01_write_register>
 374:	21 e0       	ldi	r18, 0x01	; 1
 376:	30 e0       	ldi	r19, 0x00	; 0
 378:	ae 01       	movw	r20, r28
 37a:	4a 5f       	subi	r20, 0xFA	; 250
 37c:	5f 4f       	sbci	r21, 0xFF	; 255
 37e:	62 e0       	ldi	r22, 0x02	; 2
 380:	c7 01       	movw	r24, r14
 382:	0e 94 8e 01 	call	0x31c	; 0x31c <nRF24L01_read_register>
 386:	01 e0       	ldi	r16, 0x01	; 1
 388:	10 e0       	ldi	r17, 0x00	; 0
 38a:	c8 01       	movw	r24, r16
 38c:	02 c0       	rjmp	.+4      	; 0x392 <nRF24L01_listen+0x5a>
 38e:	88 0f       	add	r24, r24
 390:	99 1f       	adc	r25, r25
 392:	da 94       	dec	r13
 394:	e2 f7       	brpl	.-8      	; 0x38e <nRF24L01_listen+0x56>
 396:	9e 81       	ldd	r25, Y+6	; 0x06
 398:	89 2b       	or	r24, r25
 39a:	8e 83       	std	Y+6, r24	; 0x06
 39c:	21 e0       	ldi	r18, 0x01	; 1
 39e:	30 e0       	ldi	r19, 0x00	; 0
 3a0:	ae 01       	movw	r20, r28
 3a2:	4a 5f       	subi	r20, 0xFA	; 250
 3a4:	5f 4f       	sbci	r21, 0xFF	; 255
 3a6:	62 e0       	ldi	r22, 0x02	; 2
 3a8:	c7 01       	movw	r24, r14
 3aa:	0e 94 8a 01 	call	0x314	; 0x314 <nRF24L01_write_register>
 3ae:	d7 01       	movw	r26, r14
 3b0:	13 96       	adiw	r26, 0x03	; 3
 3b2:	ed 91       	ld	r30, X+
 3b4:	fc 91       	ld	r31, X
 3b6:	14 97       	sbiw	r26, 0x04	; 4
 3b8:	80 81       	ld	r24, Z
 3ba:	15 96       	adiw	r26, 0x05	; 5
 3bc:	0c 90       	ld	r0, X
 3be:	02 c0       	rjmp	.+4      	; 0x3c4 <nRF24L01_listen+0x8c>
 3c0:	00 0f       	add	r16, r16
 3c2:	11 1f       	adc	r17, r17
 3c4:	0a 94       	dec	r0
 3c6:	e2 f7       	brpl	.-8      	; 0x3c0 <nRF24L01_listen+0x88>
 3c8:	08 2b       	or	r16, r24
 3ca:	00 83       	st	Z, r16
 3cc:	26 96       	adiw	r28, 0x06	; 6
 3ce:	0f b6       	in	r0, 0x3f	; 63
 3d0:	f8 94       	cli
 3d2:	de bf       	out	0x3e, r29	; 62
 3d4:	0f be       	out	0x3f, r0	; 63
 3d6:	cd bf       	out	0x3d, r28	; 61
 3d8:	df 91       	pop	r29
 3da:	cf 91       	pop	r28
 3dc:	1f 91       	pop	r17
 3de:	0f 91       	pop	r16
 3e0:	ff 90       	pop	r15
 3e2:	ef 90       	pop	r14
 3e4:	df 90       	pop	r13
 3e6:	08 95       	ret

000003e8 <nRF24L01_pipe_number_received>:
 3e8:	fc 01       	movw	r30, r24
 3ea:	27 85       	ldd	r18, Z+15	; 0x0f
 3ec:	2e 70       	andi	r18, 0x0E	; 14
 3ee:	30 e0       	ldi	r19, 0x00	; 0
 3f0:	35 95       	asr	r19
 3f2:	27 95       	ror	r18
 3f4:	26 30       	cpi	r18, 0x06	; 6
 3f6:	31 05       	cpc	r19, r1
 3f8:	1c f4       	brge	.+6      	; 0x400 <__LOCK_REGION_LENGTH__>
 3fa:	82 2f       	mov	r24, r18
 3fc:	93 2f       	mov	r25, r19
 3fe:	08 95       	ret
 400:	8f ef       	ldi	r24, 0xFF	; 255
 402:	9f ef       	ldi	r25, 0xFF	; 255
 404:	08 95       	ret

00000406 <nRF24L01_data_received>:
 406:	cf 93       	push	r28
 408:	df 93       	push	r29
 40a:	ec 01       	movw	r28, r24
 40c:	eb 81       	ldd	r30, Y+3	; 0x03
 40e:	fc 81       	ldd	r31, Y+4	; 0x04
 410:	20 81       	ld	r18, Z
 412:	81 e0       	ldi	r24, 0x01	; 1
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	0d 80       	ldd	r0, Y+5	; 0x05
 418:	02 c0       	rjmp	.+4      	; 0x41e <nRF24L01_data_received+0x18>
 41a:	88 0f       	add	r24, r24
 41c:	99 1f       	adc	r25, r25
 41e:	0a 94       	dec	r0
 420:	e2 f7       	brpl	.-8      	; 0x41a <nRF24L01_data_received+0x14>
 422:	80 95       	com	r24
 424:	82 23       	and	r24, r18
 426:	80 83       	st	Z, r24
 428:	ce 01       	movw	r24, r28
 42a:	0e 94 99 01 	call	0x332	; 0x332 <nRF24L01_update_status>
 42e:	ce 01       	movw	r24, r28
 430:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <nRF24L01_pipe_number_received>
 434:	89 2f       	mov	r24, r25
 436:	80 95       	com	r24
 438:	88 1f       	adc	r24, r24
 43a:	88 27       	eor	r24, r24
 43c:	88 1f       	adc	r24, r24
 43e:	df 91       	pop	r29
 440:	cf 91       	pop	r28
 442:	08 95       	ret

00000444 <nRF24L01_clear_interrupts>:
 444:	cf 93       	push	r28
 446:	df 93       	push	r29
 448:	1f 92       	push	r1
 44a:	cd b7       	in	r28, 0x3d	; 61
 44c:	de b7       	in	r29, 0x3e	; 62
 44e:	20 e7       	ldi	r18, 0x70	; 112
 450:	29 83       	std	Y+1, r18	; 0x01
 452:	21 e0       	ldi	r18, 0x01	; 1
 454:	30 e0       	ldi	r19, 0x00	; 0
 456:	ae 01       	movw	r20, r28
 458:	4f 5f       	subi	r20, 0xFF	; 255
 45a:	5f 4f       	sbci	r21, 0xFF	; 255
 45c:	67 e0       	ldi	r22, 0x07	; 7
 45e:	0e 94 8a 01 	call	0x314	; 0x314 <nRF24L01_write_register>
 462:	0f 90       	pop	r0
 464:	df 91       	pop	r29
 466:	cf 91       	pop	r28
 468:	08 95       	ret

0000046a <nRF24L01_begin>:
 46a:	ff 92       	push	r15
 46c:	0f 93       	push	r16
 46e:	1f 93       	push	r17
 470:	cf 93       	push	r28
 472:	df 93       	push	r29
 474:	1f 92       	push	r1
 476:	cd b7       	in	r28, 0x3d	; 61
 478:	de b7       	in	r29, 0x3e	; 62
 47a:	8c 01       	movw	r16, r24
 47c:	dc 01       	movw	r26, r24
 47e:	ed 91       	ld	r30, X+
 480:	fc 91       	ld	r31, X
 482:	11 97       	sbiw	r26, 0x01	; 1
 484:	42 91       	ld	r20, -Z
 486:	81 e0       	ldi	r24, 0x01	; 1
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	9c 01       	movw	r18, r24
 48c:	12 96       	adiw	r26, 0x02	; 2
 48e:	0c 90       	ld	r0, X
 490:	12 97       	sbiw	r26, 0x02	; 2
 492:	02 c0       	rjmp	.+4      	; 0x498 <nRF24L01_begin+0x2e>
 494:	22 0f       	add	r18, r18
 496:	33 1f       	adc	r19, r19
 498:	0a 94       	dec	r0
 49a:	e2 f7       	brpl	.-8      	; 0x494 <nRF24L01_begin+0x2a>
 49c:	24 2b       	or	r18, r20
 49e:	20 83       	st	Z, r18
 4a0:	13 96       	adiw	r26, 0x03	; 3
 4a2:	ed 91       	ld	r30, X+
 4a4:	fc 91       	ld	r31, X
 4a6:	14 97       	sbiw	r26, 0x04	; 4
 4a8:	42 91       	ld	r20, -Z
 4aa:	9c 01       	movw	r18, r24
 4ac:	15 96       	adiw	r26, 0x05	; 5
 4ae:	0c 90       	ld	r0, X
 4b0:	15 97       	sbiw	r26, 0x05	; 5
 4b2:	02 c0       	rjmp	.+4      	; 0x4b8 <nRF24L01_begin+0x4e>
 4b4:	22 0f       	add	r18, r18
 4b6:	33 1f       	adc	r19, r19
 4b8:	0a 94       	dec	r0
 4ba:	e2 f7       	brpl	.-8      	; 0x4b4 <nRF24L01_begin+0x4a>
 4bc:	24 2b       	or	r18, r20
 4be:	20 83       	st	Z, r18
 4c0:	ed 91       	ld	r30, X+
 4c2:	fc 91       	ld	r31, X
 4c4:	11 97       	sbiw	r26, 0x01	; 1
 4c6:	40 81       	ld	r20, Z
 4c8:	9c 01       	movw	r18, r24
 4ca:	12 96       	adiw	r26, 0x02	; 2
 4cc:	0c 90       	ld	r0, X
 4ce:	12 97       	sbiw	r26, 0x02	; 2
 4d0:	02 c0       	rjmp	.+4      	; 0x4d6 <nRF24L01_begin+0x6c>
 4d2:	22 0f       	add	r18, r18
 4d4:	33 1f       	adc	r19, r19
 4d6:	0a 94       	dec	r0
 4d8:	e2 f7       	brpl	.-8      	; 0x4d2 <nRF24L01_begin+0x68>
 4da:	24 2b       	or	r18, r20
 4dc:	20 83       	st	Z, r18
 4de:	13 96       	adiw	r26, 0x03	; 3
 4e0:	ed 91       	ld	r30, X+
 4e2:	fc 91       	ld	r31, X
 4e4:	14 97       	sbiw	r26, 0x04	; 4
 4e6:	30 81       	ld	r19, Z
 4e8:	ac 01       	movw	r20, r24
 4ea:	15 96       	adiw	r26, 0x05	; 5
 4ec:	0c 90       	ld	r0, X
 4ee:	15 97       	sbiw	r26, 0x05	; 5
 4f0:	02 c0       	rjmp	.+4      	; 0x4f6 <nRF24L01_begin+0x8c>
 4f2:	44 0f       	add	r20, r20
 4f4:	55 1f       	adc	r21, r21
 4f6:	0a 94       	dec	r0
 4f8:	e2 f7       	brpl	.-8      	; 0x4f2 <nRF24L01_begin+0x88>
 4fa:	24 2f       	mov	r18, r20
 4fc:	20 95       	com	r18
 4fe:	23 23       	and	r18, r19
 500:	20 83       	st	Z, r18
 502:	2c b5       	in	r18, 0x2c	; 44
 504:	20 61       	ori	r18, 0x10	; 16
 506:	2c bd       	out	0x2c, r18	; 44
 508:	2c b5       	in	r18, 0x2c	; 44
 50a:	20 64       	ori	r18, 0x40	; 64
 50c:	2c bd       	out	0x2c, r18	; 44
 50e:	16 96       	adiw	r26, 0x06	; 6
 510:	ed 91       	ld	r30, X+
 512:	fc 91       	ld	r31, X
 514:	17 97       	sbiw	r26, 0x07	; 7
 516:	42 91       	ld	r20, -Z
 518:	9c 01       	movw	r18, r24
 51a:	18 96       	adiw	r26, 0x08	; 8
 51c:	0c 90       	ld	r0, X
 51e:	18 97       	sbiw	r26, 0x08	; 8
 520:	02 c0       	rjmp	.+4      	; 0x526 <nRF24L01_begin+0xbc>
 522:	22 0f       	add	r18, r18
 524:	33 1f       	adc	r19, r19
 526:	0a 94       	dec	r0
 528:	e2 f7       	brpl	.-8      	; 0x522 <nRF24L01_begin+0xb8>
 52a:	24 2b       	or	r18, r20
 52c:	20 83       	st	Z, r18
 52e:	19 96       	adiw	r26, 0x09	; 9
 530:	ed 91       	ld	r30, X+
 532:	fc 91       	ld	r31, X
 534:	1a 97       	sbiw	r26, 0x0a	; 10
 536:	42 91       	ld	r20, -Z
 538:	9c 01       	movw	r18, r24
 53a:	1b 96       	adiw	r26, 0x0b	; 11
 53c:	0c 90       	ld	r0, X
 53e:	1b 97       	sbiw	r26, 0x0b	; 11
 540:	02 c0       	rjmp	.+4      	; 0x546 <nRF24L01_begin+0xdc>
 542:	22 0f       	add	r18, r18
 544:	33 1f       	adc	r19, r19
 546:	0a 94       	dec	r0
 548:	e2 f7       	brpl	.-8      	; 0x542 <nRF24L01_begin+0xd8>
 54a:	24 2b       	or	r18, r20
 54c:	20 83       	st	Z, r18
 54e:	1c 96       	adiw	r26, 0x0c	; 12
 550:	ed 91       	ld	r30, X+
 552:	fc 91       	ld	r31, X
 554:	1d 97       	sbiw	r26, 0x0d	; 13
 556:	22 91       	ld	r18, -Z
 558:	1e 96       	adiw	r26, 0x0e	; 14
 55a:	0c 90       	ld	r0, X
 55c:	02 c0       	rjmp	.+4      	; 0x562 <nRF24L01_begin+0xf8>
 55e:	88 0f       	add	r24, r24
 560:	99 1f       	adc	r25, r25
 562:	0a 94       	dec	r0
 564:	e2 f7       	brpl	.-8      	; 0x55e <nRF24L01_begin+0xf4>
 566:	80 95       	com	r24
 568:	82 23       	and	r24, r18
 56a:	80 83       	st	Z, r24
 56c:	8c b5       	in	r24, 0x2c	; 44
 56e:	87 7f       	andi	r24, 0xF7	; 247
 570:	8c bd       	out	0x2c, r24	; 44
 572:	8c b5       	in	r24, 0x2c	; 44
 574:	8b 7f       	andi	r24, 0xFB	; 251
 576:	8c bd       	out	0x2c, r24	; 44
 578:	8c b5       	in	r24, 0x2c	; 44
 57a:	8e 7f       	andi	r24, 0xFE	; 254
 57c:	8c bd       	out	0x2c, r24	; 44
 57e:	8c b5       	in	r24, 0x2c	; 44
 580:	8d 7f       	andi	r24, 0xFD	; 253
 582:	8c bd       	out	0x2c, r24	; 44
 584:	8d b5       	in	r24, 0x2d	; 45
 586:	81 60       	ori	r24, 0x01	; 1
 588:	8d bd       	out	0x2d, r24	; 45
 58a:	8c b5       	in	r24, 0x2c	; 44
 58c:	8f 7d       	andi	r24, 0xDF	; 223
 58e:	8c bd       	out	0x2c, r24	; 44
 590:	20 e0       	ldi	r18, 0x00	; 0
 592:	30 e0       	ldi	r19, 0x00	; 0
 594:	40 e0       	ldi	r20, 0x00	; 0
 596:	50 e0       	ldi	r21, 0x00	; 0
 598:	62 ee       	ldi	r22, 0xE2	; 226
 59a:	c8 01       	movw	r24, r16
 59c:	0e 94 4f 01 	call	0x29e	; 0x29e <nRF24L01_send_command>
 5a0:	20 e0       	ldi	r18, 0x00	; 0
 5a2:	30 e0       	ldi	r19, 0x00	; 0
 5a4:	40 e0       	ldi	r20, 0x00	; 0
 5a6:	50 e0       	ldi	r21, 0x00	; 0
 5a8:	61 ee       	ldi	r22, 0xE1	; 225
 5aa:	c8 01       	movw	r24, r16
 5ac:	0e 94 4f 01 	call	0x29e	; 0x29e <nRF24L01_send_command>
 5b0:	c8 01       	movw	r24, r16
 5b2:	0e 94 22 02 	call	0x444	; 0x444 <nRF24L01_clear_interrupts>
 5b6:	8f e0       	ldi	r24, 0x0F	; 15
 5b8:	89 83       	std	Y+1, r24	; 0x01
 5ba:	21 e0       	ldi	r18, 0x01	; 1
 5bc:	30 e0       	ldi	r19, 0x00	; 0
 5be:	ae 01       	movw	r20, r28
 5c0:	4f 5f       	subi	r20, 0xFF	; 255
 5c2:	5f 4f       	sbci	r21, 0xFF	; 255
 5c4:	60 e0       	ldi	r22, 0x00	; 0
 5c6:	c8 01       	movw	r24, r16
 5c8:	0e 94 8a 01 	call	0x314	; 0x314 <nRF24L01_write_register>
 5cc:	0f 2e       	mov	r0, r31
 5ce:	ff e3       	ldi	r31, 0x3F	; 63
 5d0:	ff 2e       	mov	r15, r31
 5d2:	f0 2d       	mov	r31, r0
 5d4:	f9 82       	std	Y+1, r15	; 0x01
 5d6:	21 e0       	ldi	r18, 0x01	; 1
 5d8:	30 e0       	ldi	r19, 0x00	; 0
 5da:	ae 01       	movw	r20, r28
 5dc:	4f 5f       	subi	r20, 0xFF	; 255
 5de:	5f 4f       	sbci	r21, 0xFF	; 255
 5e0:	61 e0       	ldi	r22, 0x01	; 1
 5e2:	c8 01       	movw	r24, r16
 5e4:	0e 94 8a 01 	call	0x314	; 0x314 <nRF24L01_write_register>
 5e8:	f9 82       	std	Y+1, r15	; 0x01
 5ea:	21 e0       	ldi	r18, 0x01	; 1
 5ec:	30 e0       	ldi	r19, 0x00	; 0
 5ee:	ae 01       	movw	r20, r28
 5f0:	4f 5f       	subi	r20, 0xFF	; 255
 5f2:	5f 4f       	sbci	r21, 0xFF	; 255
 5f4:	6c e1       	ldi	r22, 0x1C	; 28
 5f6:	c8 01       	movw	r24, r16
 5f8:	0e 94 8a 01 	call	0x314	; 0x314 <nRF24L01_write_register>
 5fc:	84 e0       	ldi	r24, 0x04	; 4
 5fe:	89 83       	std	Y+1, r24	; 0x01
 600:	21 e0       	ldi	r18, 0x01	; 1
 602:	30 e0       	ldi	r19, 0x00	; 0
 604:	ae 01       	movw	r20, r28
 606:	4f 5f       	subi	r20, 0xFF	; 255
 608:	5f 4f       	sbci	r21, 0xFF	; 255
 60a:	6d e1       	ldi	r22, 0x1D	; 29
 60c:	c8 01       	movw	r24, r16
 60e:	0e 94 8a 01 	call	0x314	; 0x314 <nRF24L01_write_register>
 612:	19 82       	std	Y+1, r1	; 0x01
 614:	21 e0       	ldi	r18, 0x01	; 1
 616:	30 e0       	ldi	r19, 0x00	; 0
 618:	ae 01       	movw	r20, r28
 61a:	4f 5f       	subi	r20, 0xFF	; 255
 61c:	5f 4f       	sbci	r21, 0xFF	; 255
 61e:	62 e0       	ldi	r22, 0x02	; 2
 620:	c8 01       	movw	r24, r16
 622:	0e 94 8a 01 	call	0x314	; 0x314 <nRF24L01_write_register>
 626:	0f 90       	pop	r0
 628:	df 91       	pop	r29
 62a:	cf 91       	pop	r28
 62c:	1f 91       	pop	r17
 62e:	0f 91       	pop	r16
 630:	ff 90       	pop	r15
 632:	08 95       	ret

00000634 <nRF24L01_clear_receive_interrupt>:
 634:	cf 93       	push	r28
 636:	df 93       	push	r29
 638:	1f 92       	push	r1
 63a:	cd b7       	in	r28, 0x3d	; 61
 63c:	de b7       	in	r29, 0x3e	; 62
 63e:	fc 01       	movw	r30, r24
 640:	97 85       	ldd	r25, Z+15	; 0x0f
 642:	90 64       	ori	r25, 0x40	; 64
 644:	99 83       	std	Y+1, r25	; 0x01
 646:	21 e0       	ldi	r18, 0x01	; 1
 648:	30 e0       	ldi	r19, 0x00	; 0
 64a:	ae 01       	movw	r20, r28
 64c:	4f 5f       	subi	r20, 0xFF	; 255
 64e:	5f 4f       	sbci	r21, 0xFF	; 255
 650:	67 e0       	ldi	r22, 0x07	; 7
 652:	cf 01       	movw	r24, r30
 654:	0e 94 8a 01 	call	0x314	; 0x314 <nRF24L01_write_register>
 658:	0f 90       	pop	r0
 65a:	df 91       	pop	r29
 65c:	cf 91       	pop	r28
 65e:	08 95       	ret

00000660 <nRF24L01_read_received_data>:
 660:	0f 93       	push	r16
 662:	1f 93       	push	r17
 664:	cf 93       	push	r28
 666:	df 93       	push	r29
 668:	8c 01       	movw	r16, r24
 66a:	eb 01       	movw	r28, r22
 66c:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <nRF24L01_pipe_number_received>
 670:	99 83       	std	Y+1, r25	; 0x01
 672:	88 83       	st	Y, r24
 674:	c8 01       	movw	r24, r16
 676:	0e 94 1a 03 	call	0x634	; 0x634 <nRF24L01_clear_receive_interrupt>
 67a:	88 81       	ld	r24, Y
 67c:	99 81       	ldd	r25, Y+1	; 0x01
 67e:	99 23       	and	r25, r25
 680:	1c f4       	brge	.+6      	; 0x688 <nRF24L01_read_received_data+0x28>
 682:	1a a2       	std	Y+34, r1	; 0x22
 684:	80 e0       	ldi	r24, 0x00	; 0
 686:	17 c0       	rjmp	.+46     	; 0x6b6 <nRF24L01_read_received_data+0x56>
 688:	21 e0       	ldi	r18, 0x01	; 1
 68a:	30 e0       	ldi	r19, 0x00	; 0
 68c:	ae 01       	movw	r20, r28
 68e:	4e 5d       	subi	r20, 0xDE	; 222
 690:	5f 4f       	sbci	r21, 0xFF	; 255
 692:	60 e6       	ldi	r22, 0x60	; 96
 694:	c8 01       	movw	r24, r16
 696:	0e 94 8e 01 	call	0x31c	; 0x31c <nRF24L01_read_register>
 69a:	2a a1       	ldd	r18, Y+34	; 0x22
 69c:	22 23       	and	r18, r18
 69e:	51 f0       	breq	.+20     	; 0x6b4 <nRF24L01_read_received_data+0x54>
 6a0:	30 e0       	ldi	r19, 0x00	; 0
 6a2:	ae 01       	movw	r20, r28
 6a4:	4e 5f       	subi	r20, 0xFE	; 254
 6a6:	5f 4f       	sbci	r21, 0xFF	; 255
 6a8:	61 e6       	ldi	r22, 0x61	; 97
 6aa:	c8 01       	movw	r24, r16
 6ac:	0e 94 4f 01 	call	0x29e	; 0x29e <nRF24L01_send_command>
 6b0:	81 e0       	ldi	r24, 0x01	; 1
 6b2:	01 c0       	rjmp	.+2      	; 0x6b6 <nRF24L01_read_received_data+0x56>
 6b4:	81 e0       	ldi	r24, 0x01	; 1
 6b6:	df 91       	pop	r29
 6b8:	cf 91       	pop	r28
 6ba:	1f 91       	pop	r17
 6bc:	0f 91       	pop	r16
 6be:	08 95       	ret

000006c0 <malloc>:
 6c0:	0f 93       	push	r16
 6c2:	1f 93       	push	r17
 6c4:	cf 93       	push	r28
 6c6:	df 93       	push	r29
 6c8:	82 30       	cpi	r24, 0x02	; 2
 6ca:	91 05       	cpc	r25, r1
 6cc:	10 f4       	brcc	.+4      	; 0x6d2 <malloc+0x12>
 6ce:	82 e0       	ldi	r24, 0x02	; 2
 6d0:	90 e0       	ldi	r25, 0x00	; 0
 6d2:	e0 91 33 01 	lds	r30, 0x0133	; 0x800133 <__flp>
 6d6:	f0 91 34 01 	lds	r31, 0x0134	; 0x800134 <__flp+0x1>
 6da:	20 e0       	ldi	r18, 0x00	; 0
 6dc:	30 e0       	ldi	r19, 0x00	; 0
 6de:	a0 e0       	ldi	r26, 0x00	; 0
 6e0:	b0 e0       	ldi	r27, 0x00	; 0
 6e2:	30 97       	sbiw	r30, 0x00	; 0
 6e4:	19 f1       	breq	.+70     	; 0x72c <malloc+0x6c>
 6e6:	40 81       	ld	r20, Z
 6e8:	51 81       	ldd	r21, Z+1	; 0x01
 6ea:	02 81       	ldd	r16, Z+2	; 0x02
 6ec:	13 81       	ldd	r17, Z+3	; 0x03
 6ee:	48 17       	cp	r20, r24
 6f0:	59 07       	cpc	r21, r25
 6f2:	c8 f0       	brcs	.+50     	; 0x726 <malloc+0x66>
 6f4:	84 17       	cp	r24, r20
 6f6:	95 07       	cpc	r25, r21
 6f8:	69 f4       	brne	.+26     	; 0x714 <malloc+0x54>
 6fa:	10 97       	sbiw	r26, 0x00	; 0
 6fc:	31 f0       	breq	.+12     	; 0x70a <malloc+0x4a>
 6fe:	12 96       	adiw	r26, 0x02	; 2
 700:	0c 93       	st	X, r16
 702:	12 97       	sbiw	r26, 0x02	; 2
 704:	13 96       	adiw	r26, 0x03	; 3
 706:	1c 93       	st	X, r17
 708:	27 c0       	rjmp	.+78     	; 0x758 <malloc+0x98>
 70a:	00 93 33 01 	sts	0x0133, r16	; 0x800133 <__flp>
 70e:	10 93 34 01 	sts	0x0134, r17	; 0x800134 <__flp+0x1>
 712:	22 c0       	rjmp	.+68     	; 0x758 <malloc+0x98>
 714:	21 15       	cp	r18, r1
 716:	31 05       	cpc	r19, r1
 718:	19 f0       	breq	.+6      	; 0x720 <malloc+0x60>
 71a:	42 17       	cp	r20, r18
 71c:	53 07       	cpc	r21, r19
 71e:	18 f4       	brcc	.+6      	; 0x726 <malloc+0x66>
 720:	9a 01       	movw	r18, r20
 722:	bd 01       	movw	r22, r26
 724:	ef 01       	movw	r28, r30
 726:	df 01       	movw	r26, r30
 728:	f8 01       	movw	r30, r16
 72a:	db cf       	rjmp	.-74     	; 0x6e2 <malloc+0x22>
 72c:	21 15       	cp	r18, r1
 72e:	31 05       	cpc	r19, r1
 730:	f9 f0       	breq	.+62     	; 0x770 <malloc+0xb0>
 732:	28 1b       	sub	r18, r24
 734:	39 0b       	sbc	r19, r25
 736:	24 30       	cpi	r18, 0x04	; 4
 738:	31 05       	cpc	r19, r1
 73a:	80 f4       	brcc	.+32     	; 0x75c <malloc+0x9c>
 73c:	8a 81       	ldd	r24, Y+2	; 0x02
 73e:	9b 81       	ldd	r25, Y+3	; 0x03
 740:	61 15       	cp	r22, r1
 742:	71 05       	cpc	r23, r1
 744:	21 f0       	breq	.+8      	; 0x74e <malloc+0x8e>
 746:	fb 01       	movw	r30, r22
 748:	93 83       	std	Z+3, r25	; 0x03
 74a:	82 83       	std	Z+2, r24	; 0x02
 74c:	04 c0       	rjmp	.+8      	; 0x756 <malloc+0x96>
 74e:	90 93 34 01 	sts	0x0134, r25	; 0x800134 <__flp+0x1>
 752:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <__flp>
 756:	fe 01       	movw	r30, r28
 758:	32 96       	adiw	r30, 0x02	; 2
 75a:	44 c0       	rjmp	.+136    	; 0x7e4 <malloc+0x124>
 75c:	fe 01       	movw	r30, r28
 75e:	e2 0f       	add	r30, r18
 760:	f3 1f       	adc	r31, r19
 762:	81 93       	st	Z+, r24
 764:	91 93       	st	Z+, r25
 766:	22 50       	subi	r18, 0x02	; 2
 768:	31 09       	sbc	r19, r1
 76a:	39 83       	std	Y+1, r19	; 0x01
 76c:	28 83       	st	Y, r18
 76e:	3a c0       	rjmp	.+116    	; 0x7e4 <malloc+0x124>
 770:	20 91 31 01 	lds	r18, 0x0131	; 0x800131 <__brkval>
 774:	30 91 32 01 	lds	r19, 0x0132	; 0x800132 <__brkval+0x1>
 778:	23 2b       	or	r18, r19
 77a:	41 f4       	brne	.+16     	; 0x78c <malloc+0xcc>
 77c:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 780:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 784:	30 93 32 01 	sts	0x0132, r19	; 0x800132 <__brkval+0x1>
 788:	20 93 31 01 	sts	0x0131, r18	; 0x800131 <__brkval>
 78c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 790:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 794:	21 15       	cp	r18, r1
 796:	31 05       	cpc	r19, r1
 798:	41 f4       	brne	.+16     	; 0x7aa <malloc+0xea>
 79a:	2d b7       	in	r18, 0x3d	; 61
 79c:	3e b7       	in	r19, 0x3e	; 62
 79e:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 7a2:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 7a6:	24 1b       	sub	r18, r20
 7a8:	35 0b       	sbc	r19, r21
 7aa:	e0 91 31 01 	lds	r30, 0x0131	; 0x800131 <__brkval>
 7ae:	f0 91 32 01 	lds	r31, 0x0132	; 0x800132 <__brkval+0x1>
 7b2:	e2 17       	cp	r30, r18
 7b4:	f3 07       	cpc	r31, r19
 7b6:	a0 f4       	brcc	.+40     	; 0x7e0 <malloc+0x120>
 7b8:	2e 1b       	sub	r18, r30
 7ba:	3f 0b       	sbc	r19, r31
 7bc:	28 17       	cp	r18, r24
 7be:	39 07       	cpc	r19, r25
 7c0:	78 f0       	brcs	.+30     	; 0x7e0 <malloc+0x120>
 7c2:	ac 01       	movw	r20, r24
 7c4:	4e 5f       	subi	r20, 0xFE	; 254
 7c6:	5f 4f       	sbci	r21, 0xFF	; 255
 7c8:	24 17       	cp	r18, r20
 7ca:	35 07       	cpc	r19, r21
 7cc:	48 f0       	brcs	.+18     	; 0x7e0 <malloc+0x120>
 7ce:	4e 0f       	add	r20, r30
 7d0:	5f 1f       	adc	r21, r31
 7d2:	50 93 32 01 	sts	0x0132, r21	; 0x800132 <__brkval+0x1>
 7d6:	40 93 31 01 	sts	0x0131, r20	; 0x800131 <__brkval>
 7da:	81 93       	st	Z+, r24
 7dc:	91 93       	st	Z+, r25
 7de:	02 c0       	rjmp	.+4      	; 0x7e4 <malloc+0x124>
 7e0:	e0 e0       	ldi	r30, 0x00	; 0
 7e2:	f0 e0       	ldi	r31, 0x00	; 0
 7e4:	cf 01       	movw	r24, r30
 7e6:	df 91       	pop	r29
 7e8:	cf 91       	pop	r28
 7ea:	1f 91       	pop	r17
 7ec:	0f 91       	pop	r16
 7ee:	08 95       	ret

000007f0 <free>:
 7f0:	cf 93       	push	r28
 7f2:	df 93       	push	r29
 7f4:	00 97       	sbiw	r24, 0x00	; 0
 7f6:	09 f4       	brne	.+2      	; 0x7fa <free+0xa>
 7f8:	81 c0       	rjmp	.+258    	; 0x8fc <free+0x10c>
 7fa:	fc 01       	movw	r30, r24
 7fc:	32 97       	sbiw	r30, 0x02	; 2
 7fe:	13 82       	std	Z+3, r1	; 0x03
 800:	12 82       	std	Z+2, r1	; 0x02
 802:	a0 91 33 01 	lds	r26, 0x0133	; 0x800133 <__flp>
 806:	b0 91 34 01 	lds	r27, 0x0134	; 0x800134 <__flp+0x1>
 80a:	10 97       	sbiw	r26, 0x00	; 0
 80c:	81 f4       	brne	.+32     	; 0x82e <free+0x3e>
 80e:	20 81       	ld	r18, Z
 810:	31 81       	ldd	r19, Z+1	; 0x01
 812:	82 0f       	add	r24, r18
 814:	93 1f       	adc	r25, r19
 816:	20 91 31 01 	lds	r18, 0x0131	; 0x800131 <__brkval>
 81a:	30 91 32 01 	lds	r19, 0x0132	; 0x800132 <__brkval+0x1>
 81e:	28 17       	cp	r18, r24
 820:	39 07       	cpc	r19, r25
 822:	51 f5       	brne	.+84     	; 0x878 <free+0x88>
 824:	f0 93 32 01 	sts	0x0132, r31	; 0x800132 <__brkval+0x1>
 828:	e0 93 31 01 	sts	0x0131, r30	; 0x800131 <__brkval>
 82c:	67 c0       	rjmp	.+206    	; 0x8fc <free+0x10c>
 82e:	ed 01       	movw	r28, r26
 830:	20 e0       	ldi	r18, 0x00	; 0
 832:	30 e0       	ldi	r19, 0x00	; 0
 834:	ce 17       	cp	r28, r30
 836:	df 07       	cpc	r29, r31
 838:	40 f4       	brcc	.+16     	; 0x84a <free+0x5a>
 83a:	4a 81       	ldd	r20, Y+2	; 0x02
 83c:	5b 81       	ldd	r21, Y+3	; 0x03
 83e:	9e 01       	movw	r18, r28
 840:	41 15       	cp	r20, r1
 842:	51 05       	cpc	r21, r1
 844:	f1 f0       	breq	.+60     	; 0x882 <free+0x92>
 846:	ea 01       	movw	r28, r20
 848:	f5 cf       	rjmp	.-22     	; 0x834 <free+0x44>
 84a:	d3 83       	std	Z+3, r29	; 0x03
 84c:	c2 83       	std	Z+2, r28	; 0x02
 84e:	40 81       	ld	r20, Z
 850:	51 81       	ldd	r21, Z+1	; 0x01
 852:	84 0f       	add	r24, r20
 854:	95 1f       	adc	r25, r21
 856:	c8 17       	cp	r28, r24
 858:	d9 07       	cpc	r29, r25
 85a:	59 f4       	brne	.+22     	; 0x872 <free+0x82>
 85c:	88 81       	ld	r24, Y
 85e:	99 81       	ldd	r25, Y+1	; 0x01
 860:	84 0f       	add	r24, r20
 862:	95 1f       	adc	r25, r21
 864:	02 96       	adiw	r24, 0x02	; 2
 866:	91 83       	std	Z+1, r25	; 0x01
 868:	80 83       	st	Z, r24
 86a:	8a 81       	ldd	r24, Y+2	; 0x02
 86c:	9b 81       	ldd	r25, Y+3	; 0x03
 86e:	93 83       	std	Z+3, r25	; 0x03
 870:	82 83       	std	Z+2, r24	; 0x02
 872:	21 15       	cp	r18, r1
 874:	31 05       	cpc	r19, r1
 876:	29 f4       	brne	.+10     	; 0x882 <free+0x92>
 878:	f0 93 34 01 	sts	0x0134, r31	; 0x800134 <__flp+0x1>
 87c:	e0 93 33 01 	sts	0x0133, r30	; 0x800133 <__flp>
 880:	3d c0       	rjmp	.+122    	; 0x8fc <free+0x10c>
 882:	e9 01       	movw	r28, r18
 884:	fb 83       	std	Y+3, r31	; 0x03
 886:	ea 83       	std	Y+2, r30	; 0x02
 888:	49 91       	ld	r20, Y+
 88a:	59 91       	ld	r21, Y+
 88c:	c4 0f       	add	r28, r20
 88e:	d5 1f       	adc	r29, r21
 890:	ec 17       	cp	r30, r28
 892:	fd 07       	cpc	r31, r29
 894:	61 f4       	brne	.+24     	; 0x8ae <free+0xbe>
 896:	80 81       	ld	r24, Z
 898:	91 81       	ldd	r25, Z+1	; 0x01
 89a:	84 0f       	add	r24, r20
 89c:	95 1f       	adc	r25, r21
 89e:	02 96       	adiw	r24, 0x02	; 2
 8a0:	e9 01       	movw	r28, r18
 8a2:	99 83       	std	Y+1, r25	; 0x01
 8a4:	88 83       	st	Y, r24
 8a6:	82 81       	ldd	r24, Z+2	; 0x02
 8a8:	93 81       	ldd	r25, Z+3	; 0x03
 8aa:	9b 83       	std	Y+3, r25	; 0x03
 8ac:	8a 83       	std	Y+2, r24	; 0x02
 8ae:	e0 e0       	ldi	r30, 0x00	; 0
 8b0:	f0 e0       	ldi	r31, 0x00	; 0
 8b2:	12 96       	adiw	r26, 0x02	; 2
 8b4:	8d 91       	ld	r24, X+
 8b6:	9c 91       	ld	r25, X
 8b8:	13 97       	sbiw	r26, 0x03	; 3
 8ba:	00 97       	sbiw	r24, 0x00	; 0
 8bc:	19 f0       	breq	.+6      	; 0x8c4 <free+0xd4>
 8be:	fd 01       	movw	r30, r26
 8c0:	dc 01       	movw	r26, r24
 8c2:	f7 cf       	rjmp	.-18     	; 0x8b2 <free+0xc2>
 8c4:	8d 91       	ld	r24, X+
 8c6:	9c 91       	ld	r25, X
 8c8:	11 97       	sbiw	r26, 0x01	; 1
 8ca:	9d 01       	movw	r18, r26
 8cc:	2e 5f       	subi	r18, 0xFE	; 254
 8ce:	3f 4f       	sbci	r19, 0xFF	; 255
 8d0:	82 0f       	add	r24, r18
 8d2:	93 1f       	adc	r25, r19
 8d4:	20 91 31 01 	lds	r18, 0x0131	; 0x800131 <__brkval>
 8d8:	30 91 32 01 	lds	r19, 0x0132	; 0x800132 <__brkval+0x1>
 8dc:	28 17       	cp	r18, r24
 8de:	39 07       	cpc	r19, r25
 8e0:	69 f4       	brne	.+26     	; 0x8fc <free+0x10c>
 8e2:	30 97       	sbiw	r30, 0x00	; 0
 8e4:	29 f4       	brne	.+10     	; 0x8f0 <free+0x100>
 8e6:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <__flp+0x1>
 8ea:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <__flp>
 8ee:	02 c0       	rjmp	.+4      	; 0x8f4 <free+0x104>
 8f0:	13 82       	std	Z+3, r1	; 0x03
 8f2:	12 82       	std	Z+2, r1	; 0x02
 8f4:	b0 93 32 01 	sts	0x0132, r27	; 0x800132 <__brkval+0x1>
 8f8:	a0 93 31 01 	sts	0x0131, r26	; 0x800131 <__brkval>
 8fc:	df 91       	pop	r29
 8fe:	cf 91       	pop	r28
 900:	08 95       	ret

00000902 <strcmp>:
 902:	fb 01       	movw	r30, r22
 904:	dc 01       	movw	r26, r24
 906:	8d 91       	ld	r24, X+
 908:	01 90       	ld	r0, Z+
 90a:	80 19       	sub	r24, r0
 90c:	01 10       	cpse	r0, r1
 90e:	d9 f3       	breq	.-10     	; 0x906 <strcmp+0x4>
 910:	99 0b       	sbc	r25, r25
 912:	08 95       	ret

00000914 <printf>:
 914:	a0 e0       	ldi	r26, 0x00	; 0
 916:	b0 e0       	ldi	r27, 0x00	; 0
 918:	e0 e9       	ldi	r30, 0x90	; 144
 91a:	f4 e0       	ldi	r31, 0x04	; 4
 91c:	0c 94 48 07 	jmp	0xe90	; 0xe90 <__prologue_saves__+0x20>
 920:	ae 01       	movw	r20, r28
 922:	4b 5f       	subi	r20, 0xFB	; 251
 924:	5f 4f       	sbci	r21, 0xFF	; 255
 926:	fa 01       	movw	r30, r20
 928:	61 91       	ld	r22, Z+
 92a:	71 91       	ld	r23, Z+
 92c:	af 01       	movw	r20, r30
 92e:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <__iob+0x2>
 932:	90 91 38 01 	lds	r25, 0x0138	; 0x800138 <__iob+0x3>
 936:	0e 94 a7 04 	call	0x94e	; 0x94e <vfprintf>
 93a:	e2 e0       	ldi	r30, 0x02	; 2
 93c:	0c 94 64 07 	jmp	0xec8	; 0xec8 <__epilogue_restores__+0x20>

00000940 <putchar>:
 940:	60 91 37 01 	lds	r22, 0x0137	; 0x800137 <__iob+0x2>
 944:	70 91 38 01 	lds	r23, 0x0138	; 0x800138 <__iob+0x3>
 948:	0e 94 9e 06 	call	0xd3c	; 0xd3c <fputc>
 94c:	08 95       	ret

0000094e <vfprintf>:
 94e:	ab e0       	ldi	r26, 0x0B	; 11
 950:	b0 e0       	ldi	r27, 0x00	; 0
 952:	ed ea       	ldi	r30, 0xAD	; 173
 954:	f4 e0       	ldi	r31, 0x04	; 4
 956:	0c 94 38 07 	jmp	0xe70	; 0xe70 <__prologue_saves__>
 95a:	6c 01       	movw	r12, r24
 95c:	7b 01       	movw	r14, r22
 95e:	8a 01       	movw	r16, r20
 960:	fc 01       	movw	r30, r24
 962:	17 82       	std	Z+7, r1	; 0x07
 964:	16 82       	std	Z+6, r1	; 0x06
 966:	83 81       	ldd	r24, Z+3	; 0x03
 968:	81 ff       	sbrs	r24, 1
 96a:	cc c1       	rjmp	.+920    	; 0xd04 <vfprintf+0x3b6>
 96c:	ce 01       	movw	r24, r28
 96e:	01 96       	adiw	r24, 0x01	; 1
 970:	3c 01       	movw	r6, r24
 972:	f6 01       	movw	r30, r12
 974:	93 81       	ldd	r25, Z+3	; 0x03
 976:	f7 01       	movw	r30, r14
 978:	93 fd       	sbrc	r25, 3
 97a:	85 91       	lpm	r24, Z+
 97c:	93 ff       	sbrs	r25, 3
 97e:	81 91       	ld	r24, Z+
 980:	7f 01       	movw	r14, r30
 982:	88 23       	and	r24, r24
 984:	09 f4       	brne	.+2      	; 0x988 <vfprintf+0x3a>
 986:	ba c1       	rjmp	.+884    	; 0xcfc <vfprintf+0x3ae>
 988:	85 32       	cpi	r24, 0x25	; 37
 98a:	39 f4       	brne	.+14     	; 0x99a <vfprintf+0x4c>
 98c:	93 fd       	sbrc	r25, 3
 98e:	85 91       	lpm	r24, Z+
 990:	93 ff       	sbrs	r25, 3
 992:	81 91       	ld	r24, Z+
 994:	7f 01       	movw	r14, r30
 996:	85 32       	cpi	r24, 0x25	; 37
 998:	29 f4       	brne	.+10     	; 0x9a4 <vfprintf+0x56>
 99a:	b6 01       	movw	r22, r12
 99c:	90 e0       	ldi	r25, 0x00	; 0
 99e:	0e 94 9e 06 	call	0xd3c	; 0xd3c <fputc>
 9a2:	e7 cf       	rjmp	.-50     	; 0x972 <vfprintf+0x24>
 9a4:	91 2c       	mov	r9, r1
 9a6:	21 2c       	mov	r2, r1
 9a8:	31 2c       	mov	r3, r1
 9aa:	ff e1       	ldi	r31, 0x1F	; 31
 9ac:	f3 15       	cp	r31, r3
 9ae:	d8 f0       	brcs	.+54     	; 0x9e6 <vfprintf+0x98>
 9b0:	8b 32       	cpi	r24, 0x2B	; 43
 9b2:	79 f0       	breq	.+30     	; 0x9d2 <vfprintf+0x84>
 9b4:	38 f4       	brcc	.+14     	; 0x9c4 <vfprintf+0x76>
 9b6:	80 32       	cpi	r24, 0x20	; 32
 9b8:	79 f0       	breq	.+30     	; 0x9d8 <vfprintf+0x8a>
 9ba:	83 32       	cpi	r24, 0x23	; 35
 9bc:	a1 f4       	brne	.+40     	; 0x9e6 <vfprintf+0x98>
 9be:	23 2d       	mov	r18, r3
 9c0:	20 61       	ori	r18, 0x10	; 16
 9c2:	1d c0       	rjmp	.+58     	; 0x9fe <vfprintf+0xb0>
 9c4:	8d 32       	cpi	r24, 0x2D	; 45
 9c6:	61 f0       	breq	.+24     	; 0x9e0 <vfprintf+0x92>
 9c8:	80 33       	cpi	r24, 0x30	; 48
 9ca:	69 f4       	brne	.+26     	; 0x9e6 <vfprintf+0x98>
 9cc:	23 2d       	mov	r18, r3
 9ce:	21 60       	ori	r18, 0x01	; 1
 9d0:	16 c0       	rjmp	.+44     	; 0x9fe <vfprintf+0xb0>
 9d2:	83 2d       	mov	r24, r3
 9d4:	82 60       	ori	r24, 0x02	; 2
 9d6:	38 2e       	mov	r3, r24
 9d8:	e3 2d       	mov	r30, r3
 9da:	e4 60       	ori	r30, 0x04	; 4
 9dc:	3e 2e       	mov	r3, r30
 9de:	2a c0       	rjmp	.+84     	; 0xa34 <vfprintf+0xe6>
 9e0:	f3 2d       	mov	r31, r3
 9e2:	f8 60       	ori	r31, 0x08	; 8
 9e4:	1d c0       	rjmp	.+58     	; 0xa20 <vfprintf+0xd2>
 9e6:	37 fc       	sbrc	r3, 7
 9e8:	2d c0       	rjmp	.+90     	; 0xa44 <vfprintf+0xf6>
 9ea:	20 ed       	ldi	r18, 0xD0	; 208
 9ec:	28 0f       	add	r18, r24
 9ee:	2a 30       	cpi	r18, 0x0A	; 10
 9f0:	40 f0       	brcs	.+16     	; 0xa02 <vfprintf+0xb4>
 9f2:	8e 32       	cpi	r24, 0x2E	; 46
 9f4:	b9 f4       	brne	.+46     	; 0xa24 <vfprintf+0xd6>
 9f6:	36 fc       	sbrc	r3, 6
 9f8:	81 c1       	rjmp	.+770    	; 0xcfc <vfprintf+0x3ae>
 9fa:	23 2d       	mov	r18, r3
 9fc:	20 64       	ori	r18, 0x40	; 64
 9fe:	32 2e       	mov	r3, r18
 a00:	19 c0       	rjmp	.+50     	; 0xa34 <vfprintf+0xe6>
 a02:	36 fe       	sbrs	r3, 6
 a04:	06 c0       	rjmp	.+12     	; 0xa12 <vfprintf+0xc4>
 a06:	8a e0       	ldi	r24, 0x0A	; 10
 a08:	98 9e       	mul	r9, r24
 a0a:	20 0d       	add	r18, r0
 a0c:	11 24       	eor	r1, r1
 a0e:	92 2e       	mov	r9, r18
 a10:	11 c0       	rjmp	.+34     	; 0xa34 <vfprintf+0xe6>
 a12:	ea e0       	ldi	r30, 0x0A	; 10
 a14:	2e 9e       	mul	r2, r30
 a16:	20 0d       	add	r18, r0
 a18:	11 24       	eor	r1, r1
 a1a:	22 2e       	mov	r2, r18
 a1c:	f3 2d       	mov	r31, r3
 a1e:	f0 62       	ori	r31, 0x20	; 32
 a20:	3f 2e       	mov	r3, r31
 a22:	08 c0       	rjmp	.+16     	; 0xa34 <vfprintf+0xe6>
 a24:	8c 36       	cpi	r24, 0x6C	; 108
 a26:	21 f4       	brne	.+8      	; 0xa30 <vfprintf+0xe2>
 a28:	83 2d       	mov	r24, r3
 a2a:	80 68       	ori	r24, 0x80	; 128
 a2c:	38 2e       	mov	r3, r24
 a2e:	02 c0       	rjmp	.+4      	; 0xa34 <vfprintf+0xe6>
 a30:	88 36       	cpi	r24, 0x68	; 104
 a32:	41 f4       	brne	.+16     	; 0xa44 <vfprintf+0xf6>
 a34:	f7 01       	movw	r30, r14
 a36:	93 fd       	sbrc	r25, 3
 a38:	85 91       	lpm	r24, Z+
 a3a:	93 ff       	sbrs	r25, 3
 a3c:	81 91       	ld	r24, Z+
 a3e:	7f 01       	movw	r14, r30
 a40:	81 11       	cpse	r24, r1
 a42:	b3 cf       	rjmp	.-154    	; 0x9aa <vfprintf+0x5c>
 a44:	98 2f       	mov	r25, r24
 a46:	9f 7d       	andi	r25, 0xDF	; 223
 a48:	95 54       	subi	r25, 0x45	; 69
 a4a:	93 30       	cpi	r25, 0x03	; 3
 a4c:	28 f4       	brcc	.+10     	; 0xa58 <vfprintf+0x10a>
 a4e:	0c 5f       	subi	r16, 0xFC	; 252
 a50:	1f 4f       	sbci	r17, 0xFF	; 255
 a52:	9f e3       	ldi	r25, 0x3F	; 63
 a54:	99 83       	std	Y+1, r25	; 0x01
 a56:	0d c0       	rjmp	.+26     	; 0xa72 <vfprintf+0x124>
 a58:	83 36       	cpi	r24, 0x63	; 99
 a5a:	31 f0       	breq	.+12     	; 0xa68 <vfprintf+0x11a>
 a5c:	83 37       	cpi	r24, 0x73	; 115
 a5e:	71 f0       	breq	.+28     	; 0xa7c <vfprintf+0x12e>
 a60:	83 35       	cpi	r24, 0x53	; 83
 a62:	09 f0       	breq	.+2      	; 0xa66 <vfprintf+0x118>
 a64:	59 c0       	rjmp	.+178    	; 0xb18 <vfprintf+0x1ca>
 a66:	21 c0       	rjmp	.+66     	; 0xaaa <vfprintf+0x15c>
 a68:	f8 01       	movw	r30, r16
 a6a:	80 81       	ld	r24, Z
 a6c:	89 83       	std	Y+1, r24	; 0x01
 a6e:	0e 5f       	subi	r16, 0xFE	; 254
 a70:	1f 4f       	sbci	r17, 0xFF	; 255
 a72:	88 24       	eor	r8, r8
 a74:	83 94       	inc	r8
 a76:	91 2c       	mov	r9, r1
 a78:	53 01       	movw	r10, r6
 a7a:	13 c0       	rjmp	.+38     	; 0xaa2 <vfprintf+0x154>
 a7c:	28 01       	movw	r4, r16
 a7e:	f2 e0       	ldi	r31, 0x02	; 2
 a80:	4f 0e       	add	r4, r31
 a82:	51 1c       	adc	r5, r1
 a84:	f8 01       	movw	r30, r16
 a86:	a0 80       	ld	r10, Z
 a88:	b1 80       	ldd	r11, Z+1	; 0x01
 a8a:	36 fe       	sbrs	r3, 6
 a8c:	03 c0       	rjmp	.+6      	; 0xa94 <vfprintf+0x146>
 a8e:	69 2d       	mov	r22, r9
 a90:	70 e0       	ldi	r23, 0x00	; 0
 a92:	02 c0       	rjmp	.+4      	; 0xa98 <vfprintf+0x14a>
 a94:	6f ef       	ldi	r22, 0xFF	; 255
 a96:	7f ef       	ldi	r23, 0xFF	; 255
 a98:	c5 01       	movw	r24, r10
 a9a:	0e 94 93 06 	call	0xd26	; 0xd26 <strnlen>
 a9e:	4c 01       	movw	r8, r24
 aa0:	82 01       	movw	r16, r4
 aa2:	f3 2d       	mov	r31, r3
 aa4:	ff 77       	andi	r31, 0x7F	; 127
 aa6:	3f 2e       	mov	r3, r31
 aa8:	16 c0       	rjmp	.+44     	; 0xad6 <vfprintf+0x188>
 aaa:	28 01       	movw	r4, r16
 aac:	22 e0       	ldi	r18, 0x02	; 2
 aae:	42 0e       	add	r4, r18
 ab0:	51 1c       	adc	r5, r1
 ab2:	f8 01       	movw	r30, r16
 ab4:	a0 80       	ld	r10, Z
 ab6:	b1 80       	ldd	r11, Z+1	; 0x01
 ab8:	36 fe       	sbrs	r3, 6
 aba:	03 c0       	rjmp	.+6      	; 0xac2 <vfprintf+0x174>
 abc:	69 2d       	mov	r22, r9
 abe:	70 e0       	ldi	r23, 0x00	; 0
 ac0:	02 c0       	rjmp	.+4      	; 0xac6 <vfprintf+0x178>
 ac2:	6f ef       	ldi	r22, 0xFF	; 255
 ac4:	7f ef       	ldi	r23, 0xFF	; 255
 ac6:	c5 01       	movw	r24, r10
 ac8:	0e 94 88 06 	call	0xd10	; 0xd10 <strnlen_P>
 acc:	4c 01       	movw	r8, r24
 ace:	f3 2d       	mov	r31, r3
 ad0:	f0 68       	ori	r31, 0x80	; 128
 ad2:	3f 2e       	mov	r3, r31
 ad4:	82 01       	movw	r16, r4
 ad6:	33 fc       	sbrc	r3, 3
 ad8:	1b c0       	rjmp	.+54     	; 0xb10 <vfprintf+0x1c2>
 ada:	82 2d       	mov	r24, r2
 adc:	90 e0       	ldi	r25, 0x00	; 0
 ade:	88 16       	cp	r8, r24
 ae0:	99 06       	cpc	r9, r25
 ae2:	b0 f4       	brcc	.+44     	; 0xb10 <vfprintf+0x1c2>
 ae4:	b6 01       	movw	r22, r12
 ae6:	80 e2       	ldi	r24, 0x20	; 32
 ae8:	90 e0       	ldi	r25, 0x00	; 0
 aea:	0e 94 9e 06 	call	0xd3c	; 0xd3c <fputc>
 aee:	2a 94       	dec	r2
 af0:	f4 cf       	rjmp	.-24     	; 0xada <vfprintf+0x18c>
 af2:	f5 01       	movw	r30, r10
 af4:	37 fc       	sbrc	r3, 7
 af6:	85 91       	lpm	r24, Z+
 af8:	37 fe       	sbrs	r3, 7
 afa:	81 91       	ld	r24, Z+
 afc:	5f 01       	movw	r10, r30
 afe:	b6 01       	movw	r22, r12
 b00:	90 e0       	ldi	r25, 0x00	; 0
 b02:	0e 94 9e 06 	call	0xd3c	; 0xd3c <fputc>
 b06:	21 10       	cpse	r2, r1
 b08:	2a 94       	dec	r2
 b0a:	21 e0       	ldi	r18, 0x01	; 1
 b0c:	82 1a       	sub	r8, r18
 b0e:	91 08       	sbc	r9, r1
 b10:	81 14       	cp	r8, r1
 b12:	91 04       	cpc	r9, r1
 b14:	71 f7       	brne	.-36     	; 0xaf2 <vfprintf+0x1a4>
 b16:	e8 c0       	rjmp	.+464    	; 0xce8 <vfprintf+0x39a>
 b18:	84 36       	cpi	r24, 0x64	; 100
 b1a:	11 f0       	breq	.+4      	; 0xb20 <vfprintf+0x1d2>
 b1c:	89 36       	cpi	r24, 0x69	; 105
 b1e:	41 f5       	brne	.+80     	; 0xb70 <vfprintf+0x222>
 b20:	f8 01       	movw	r30, r16
 b22:	37 fe       	sbrs	r3, 7
 b24:	07 c0       	rjmp	.+14     	; 0xb34 <vfprintf+0x1e6>
 b26:	60 81       	ld	r22, Z
 b28:	71 81       	ldd	r23, Z+1	; 0x01
 b2a:	82 81       	ldd	r24, Z+2	; 0x02
 b2c:	93 81       	ldd	r25, Z+3	; 0x03
 b2e:	0c 5f       	subi	r16, 0xFC	; 252
 b30:	1f 4f       	sbci	r17, 0xFF	; 255
 b32:	08 c0       	rjmp	.+16     	; 0xb44 <vfprintf+0x1f6>
 b34:	60 81       	ld	r22, Z
 b36:	71 81       	ldd	r23, Z+1	; 0x01
 b38:	07 2e       	mov	r0, r23
 b3a:	00 0c       	add	r0, r0
 b3c:	88 0b       	sbc	r24, r24
 b3e:	99 0b       	sbc	r25, r25
 b40:	0e 5f       	subi	r16, 0xFE	; 254
 b42:	1f 4f       	sbci	r17, 0xFF	; 255
 b44:	f3 2d       	mov	r31, r3
 b46:	ff 76       	andi	r31, 0x6F	; 111
 b48:	3f 2e       	mov	r3, r31
 b4a:	97 ff       	sbrs	r25, 7
 b4c:	09 c0       	rjmp	.+18     	; 0xb60 <vfprintf+0x212>
 b4e:	90 95       	com	r25
 b50:	80 95       	com	r24
 b52:	70 95       	com	r23
 b54:	61 95       	neg	r22
 b56:	7f 4f       	sbci	r23, 0xFF	; 255
 b58:	8f 4f       	sbci	r24, 0xFF	; 255
 b5a:	9f 4f       	sbci	r25, 0xFF	; 255
 b5c:	f0 68       	ori	r31, 0x80	; 128
 b5e:	3f 2e       	mov	r3, r31
 b60:	2a e0       	ldi	r18, 0x0A	; 10
 b62:	30 e0       	ldi	r19, 0x00	; 0
 b64:	a3 01       	movw	r20, r6
 b66:	0e 94 da 06 	call	0xdb4	; 0xdb4 <__ultoa_invert>
 b6a:	88 2e       	mov	r8, r24
 b6c:	86 18       	sub	r8, r6
 b6e:	45 c0       	rjmp	.+138    	; 0xbfa <vfprintf+0x2ac>
 b70:	85 37       	cpi	r24, 0x75	; 117
 b72:	31 f4       	brne	.+12     	; 0xb80 <vfprintf+0x232>
 b74:	23 2d       	mov	r18, r3
 b76:	2f 7e       	andi	r18, 0xEF	; 239
 b78:	b2 2e       	mov	r11, r18
 b7a:	2a e0       	ldi	r18, 0x0A	; 10
 b7c:	30 e0       	ldi	r19, 0x00	; 0
 b7e:	25 c0       	rjmp	.+74     	; 0xbca <vfprintf+0x27c>
 b80:	93 2d       	mov	r25, r3
 b82:	99 7f       	andi	r25, 0xF9	; 249
 b84:	b9 2e       	mov	r11, r25
 b86:	8f 36       	cpi	r24, 0x6F	; 111
 b88:	c1 f0       	breq	.+48     	; 0xbba <vfprintf+0x26c>
 b8a:	18 f4       	brcc	.+6      	; 0xb92 <vfprintf+0x244>
 b8c:	88 35       	cpi	r24, 0x58	; 88
 b8e:	79 f0       	breq	.+30     	; 0xbae <vfprintf+0x260>
 b90:	b5 c0       	rjmp	.+362    	; 0xcfc <vfprintf+0x3ae>
 b92:	80 37       	cpi	r24, 0x70	; 112
 b94:	19 f0       	breq	.+6      	; 0xb9c <vfprintf+0x24e>
 b96:	88 37       	cpi	r24, 0x78	; 120
 b98:	21 f0       	breq	.+8      	; 0xba2 <vfprintf+0x254>
 b9a:	b0 c0       	rjmp	.+352    	; 0xcfc <vfprintf+0x3ae>
 b9c:	e9 2f       	mov	r30, r25
 b9e:	e0 61       	ori	r30, 0x10	; 16
 ba0:	be 2e       	mov	r11, r30
 ba2:	b4 fe       	sbrs	r11, 4
 ba4:	0d c0       	rjmp	.+26     	; 0xbc0 <vfprintf+0x272>
 ba6:	fb 2d       	mov	r31, r11
 ba8:	f4 60       	ori	r31, 0x04	; 4
 baa:	bf 2e       	mov	r11, r31
 bac:	09 c0       	rjmp	.+18     	; 0xbc0 <vfprintf+0x272>
 bae:	34 fe       	sbrs	r3, 4
 bb0:	0a c0       	rjmp	.+20     	; 0xbc6 <vfprintf+0x278>
 bb2:	29 2f       	mov	r18, r25
 bb4:	26 60       	ori	r18, 0x06	; 6
 bb6:	b2 2e       	mov	r11, r18
 bb8:	06 c0       	rjmp	.+12     	; 0xbc6 <vfprintf+0x278>
 bba:	28 e0       	ldi	r18, 0x08	; 8
 bbc:	30 e0       	ldi	r19, 0x00	; 0
 bbe:	05 c0       	rjmp	.+10     	; 0xbca <vfprintf+0x27c>
 bc0:	20 e1       	ldi	r18, 0x10	; 16
 bc2:	30 e0       	ldi	r19, 0x00	; 0
 bc4:	02 c0       	rjmp	.+4      	; 0xbca <vfprintf+0x27c>
 bc6:	20 e1       	ldi	r18, 0x10	; 16
 bc8:	32 e0       	ldi	r19, 0x02	; 2
 bca:	f8 01       	movw	r30, r16
 bcc:	b7 fe       	sbrs	r11, 7
 bce:	07 c0       	rjmp	.+14     	; 0xbde <vfprintf+0x290>
 bd0:	60 81       	ld	r22, Z
 bd2:	71 81       	ldd	r23, Z+1	; 0x01
 bd4:	82 81       	ldd	r24, Z+2	; 0x02
 bd6:	93 81       	ldd	r25, Z+3	; 0x03
 bd8:	0c 5f       	subi	r16, 0xFC	; 252
 bda:	1f 4f       	sbci	r17, 0xFF	; 255
 bdc:	06 c0       	rjmp	.+12     	; 0xbea <vfprintf+0x29c>
 bde:	60 81       	ld	r22, Z
 be0:	71 81       	ldd	r23, Z+1	; 0x01
 be2:	80 e0       	ldi	r24, 0x00	; 0
 be4:	90 e0       	ldi	r25, 0x00	; 0
 be6:	0e 5f       	subi	r16, 0xFE	; 254
 be8:	1f 4f       	sbci	r17, 0xFF	; 255
 bea:	a3 01       	movw	r20, r6
 bec:	0e 94 da 06 	call	0xdb4	; 0xdb4 <__ultoa_invert>
 bf0:	88 2e       	mov	r8, r24
 bf2:	86 18       	sub	r8, r6
 bf4:	fb 2d       	mov	r31, r11
 bf6:	ff 77       	andi	r31, 0x7F	; 127
 bf8:	3f 2e       	mov	r3, r31
 bfa:	36 fe       	sbrs	r3, 6
 bfc:	0d c0       	rjmp	.+26     	; 0xc18 <vfprintf+0x2ca>
 bfe:	23 2d       	mov	r18, r3
 c00:	2e 7f       	andi	r18, 0xFE	; 254
 c02:	a2 2e       	mov	r10, r18
 c04:	89 14       	cp	r8, r9
 c06:	58 f4       	brcc	.+22     	; 0xc1e <vfprintf+0x2d0>
 c08:	34 fe       	sbrs	r3, 4
 c0a:	0b c0       	rjmp	.+22     	; 0xc22 <vfprintf+0x2d4>
 c0c:	32 fc       	sbrc	r3, 2
 c0e:	09 c0       	rjmp	.+18     	; 0xc22 <vfprintf+0x2d4>
 c10:	83 2d       	mov	r24, r3
 c12:	8e 7e       	andi	r24, 0xEE	; 238
 c14:	a8 2e       	mov	r10, r24
 c16:	05 c0       	rjmp	.+10     	; 0xc22 <vfprintf+0x2d4>
 c18:	b8 2c       	mov	r11, r8
 c1a:	a3 2c       	mov	r10, r3
 c1c:	03 c0       	rjmp	.+6      	; 0xc24 <vfprintf+0x2d6>
 c1e:	b8 2c       	mov	r11, r8
 c20:	01 c0       	rjmp	.+2      	; 0xc24 <vfprintf+0x2d6>
 c22:	b9 2c       	mov	r11, r9
 c24:	a4 fe       	sbrs	r10, 4
 c26:	0f c0       	rjmp	.+30     	; 0xc46 <vfprintf+0x2f8>
 c28:	fe 01       	movw	r30, r28
 c2a:	e8 0d       	add	r30, r8
 c2c:	f1 1d       	adc	r31, r1
 c2e:	80 81       	ld	r24, Z
 c30:	80 33       	cpi	r24, 0x30	; 48
 c32:	21 f4       	brne	.+8      	; 0xc3c <vfprintf+0x2ee>
 c34:	9a 2d       	mov	r25, r10
 c36:	99 7e       	andi	r25, 0xE9	; 233
 c38:	a9 2e       	mov	r10, r25
 c3a:	09 c0       	rjmp	.+18     	; 0xc4e <vfprintf+0x300>
 c3c:	a2 fe       	sbrs	r10, 2
 c3e:	06 c0       	rjmp	.+12     	; 0xc4c <vfprintf+0x2fe>
 c40:	b3 94       	inc	r11
 c42:	b3 94       	inc	r11
 c44:	04 c0       	rjmp	.+8      	; 0xc4e <vfprintf+0x300>
 c46:	8a 2d       	mov	r24, r10
 c48:	86 78       	andi	r24, 0x86	; 134
 c4a:	09 f0       	breq	.+2      	; 0xc4e <vfprintf+0x300>
 c4c:	b3 94       	inc	r11
 c4e:	a3 fc       	sbrc	r10, 3
 c50:	11 c0       	rjmp	.+34     	; 0xc74 <vfprintf+0x326>
 c52:	a0 fe       	sbrs	r10, 0
 c54:	06 c0       	rjmp	.+12     	; 0xc62 <vfprintf+0x314>
 c56:	b2 14       	cp	r11, r2
 c58:	88 f4       	brcc	.+34     	; 0xc7c <vfprintf+0x32e>
 c5a:	28 0c       	add	r2, r8
 c5c:	92 2c       	mov	r9, r2
 c5e:	9b 18       	sub	r9, r11
 c60:	0e c0       	rjmp	.+28     	; 0xc7e <vfprintf+0x330>
 c62:	b2 14       	cp	r11, r2
 c64:	60 f4       	brcc	.+24     	; 0xc7e <vfprintf+0x330>
 c66:	b6 01       	movw	r22, r12
 c68:	80 e2       	ldi	r24, 0x20	; 32
 c6a:	90 e0       	ldi	r25, 0x00	; 0
 c6c:	0e 94 9e 06 	call	0xd3c	; 0xd3c <fputc>
 c70:	b3 94       	inc	r11
 c72:	f7 cf       	rjmp	.-18     	; 0xc62 <vfprintf+0x314>
 c74:	b2 14       	cp	r11, r2
 c76:	18 f4       	brcc	.+6      	; 0xc7e <vfprintf+0x330>
 c78:	2b 18       	sub	r2, r11
 c7a:	02 c0       	rjmp	.+4      	; 0xc80 <vfprintf+0x332>
 c7c:	98 2c       	mov	r9, r8
 c7e:	21 2c       	mov	r2, r1
 c80:	a4 fe       	sbrs	r10, 4
 c82:	10 c0       	rjmp	.+32     	; 0xca4 <vfprintf+0x356>
 c84:	b6 01       	movw	r22, r12
 c86:	80 e3       	ldi	r24, 0x30	; 48
 c88:	90 e0       	ldi	r25, 0x00	; 0
 c8a:	0e 94 9e 06 	call	0xd3c	; 0xd3c <fputc>
 c8e:	a2 fe       	sbrs	r10, 2
 c90:	17 c0       	rjmp	.+46     	; 0xcc0 <vfprintf+0x372>
 c92:	a1 fc       	sbrc	r10, 1
 c94:	03 c0       	rjmp	.+6      	; 0xc9c <vfprintf+0x34e>
 c96:	88 e7       	ldi	r24, 0x78	; 120
 c98:	90 e0       	ldi	r25, 0x00	; 0
 c9a:	02 c0       	rjmp	.+4      	; 0xca0 <vfprintf+0x352>
 c9c:	88 e5       	ldi	r24, 0x58	; 88
 c9e:	90 e0       	ldi	r25, 0x00	; 0
 ca0:	b6 01       	movw	r22, r12
 ca2:	0c c0       	rjmp	.+24     	; 0xcbc <vfprintf+0x36e>
 ca4:	8a 2d       	mov	r24, r10
 ca6:	86 78       	andi	r24, 0x86	; 134
 ca8:	59 f0       	breq	.+22     	; 0xcc0 <vfprintf+0x372>
 caa:	a1 fe       	sbrs	r10, 1
 cac:	02 c0       	rjmp	.+4      	; 0xcb2 <vfprintf+0x364>
 cae:	8b e2       	ldi	r24, 0x2B	; 43
 cb0:	01 c0       	rjmp	.+2      	; 0xcb4 <vfprintf+0x366>
 cb2:	80 e2       	ldi	r24, 0x20	; 32
 cb4:	a7 fc       	sbrc	r10, 7
 cb6:	8d e2       	ldi	r24, 0x2D	; 45
 cb8:	b6 01       	movw	r22, r12
 cba:	90 e0       	ldi	r25, 0x00	; 0
 cbc:	0e 94 9e 06 	call	0xd3c	; 0xd3c <fputc>
 cc0:	89 14       	cp	r8, r9
 cc2:	38 f4       	brcc	.+14     	; 0xcd2 <vfprintf+0x384>
 cc4:	b6 01       	movw	r22, r12
 cc6:	80 e3       	ldi	r24, 0x30	; 48
 cc8:	90 e0       	ldi	r25, 0x00	; 0
 cca:	0e 94 9e 06 	call	0xd3c	; 0xd3c <fputc>
 cce:	9a 94       	dec	r9
 cd0:	f7 cf       	rjmp	.-18     	; 0xcc0 <vfprintf+0x372>
 cd2:	8a 94       	dec	r8
 cd4:	f3 01       	movw	r30, r6
 cd6:	e8 0d       	add	r30, r8
 cd8:	f1 1d       	adc	r31, r1
 cda:	80 81       	ld	r24, Z
 cdc:	b6 01       	movw	r22, r12
 cde:	90 e0       	ldi	r25, 0x00	; 0
 ce0:	0e 94 9e 06 	call	0xd3c	; 0xd3c <fputc>
 ce4:	81 10       	cpse	r8, r1
 ce6:	f5 cf       	rjmp	.-22     	; 0xcd2 <vfprintf+0x384>
 ce8:	22 20       	and	r2, r2
 cea:	09 f4       	brne	.+2      	; 0xcee <vfprintf+0x3a0>
 cec:	42 ce       	rjmp	.-892    	; 0x972 <vfprintf+0x24>
 cee:	b6 01       	movw	r22, r12
 cf0:	80 e2       	ldi	r24, 0x20	; 32
 cf2:	90 e0       	ldi	r25, 0x00	; 0
 cf4:	0e 94 9e 06 	call	0xd3c	; 0xd3c <fputc>
 cf8:	2a 94       	dec	r2
 cfa:	f6 cf       	rjmp	.-20     	; 0xce8 <vfprintf+0x39a>
 cfc:	f6 01       	movw	r30, r12
 cfe:	86 81       	ldd	r24, Z+6	; 0x06
 d00:	97 81       	ldd	r25, Z+7	; 0x07
 d02:	02 c0       	rjmp	.+4      	; 0xd08 <vfprintf+0x3ba>
 d04:	8f ef       	ldi	r24, 0xFF	; 255
 d06:	9f ef       	ldi	r25, 0xFF	; 255
 d08:	2b 96       	adiw	r28, 0x0b	; 11
 d0a:	e2 e1       	ldi	r30, 0x12	; 18
 d0c:	0c 94 54 07 	jmp	0xea8	; 0xea8 <__epilogue_restores__>

00000d10 <strnlen_P>:
 d10:	fc 01       	movw	r30, r24
 d12:	05 90       	lpm	r0, Z+
 d14:	61 50       	subi	r22, 0x01	; 1
 d16:	70 40       	sbci	r23, 0x00	; 0
 d18:	01 10       	cpse	r0, r1
 d1a:	d8 f7       	brcc	.-10     	; 0xd12 <strnlen_P+0x2>
 d1c:	80 95       	com	r24
 d1e:	90 95       	com	r25
 d20:	8e 0f       	add	r24, r30
 d22:	9f 1f       	adc	r25, r31
 d24:	08 95       	ret

00000d26 <strnlen>:
 d26:	fc 01       	movw	r30, r24
 d28:	61 50       	subi	r22, 0x01	; 1
 d2a:	70 40       	sbci	r23, 0x00	; 0
 d2c:	01 90       	ld	r0, Z+
 d2e:	01 10       	cpse	r0, r1
 d30:	d8 f7       	brcc	.-10     	; 0xd28 <strnlen+0x2>
 d32:	80 95       	com	r24
 d34:	90 95       	com	r25
 d36:	8e 0f       	add	r24, r30
 d38:	9f 1f       	adc	r25, r31
 d3a:	08 95       	ret

00000d3c <fputc>:
 d3c:	0f 93       	push	r16
 d3e:	1f 93       	push	r17
 d40:	cf 93       	push	r28
 d42:	df 93       	push	r29
 d44:	fb 01       	movw	r30, r22
 d46:	23 81       	ldd	r18, Z+3	; 0x03
 d48:	21 fd       	sbrc	r18, 1
 d4a:	03 c0       	rjmp	.+6      	; 0xd52 <fputc+0x16>
 d4c:	8f ef       	ldi	r24, 0xFF	; 255
 d4e:	9f ef       	ldi	r25, 0xFF	; 255
 d50:	2c c0       	rjmp	.+88     	; 0xdaa <fputc+0x6e>
 d52:	22 ff       	sbrs	r18, 2
 d54:	16 c0       	rjmp	.+44     	; 0xd82 <fputc+0x46>
 d56:	46 81       	ldd	r20, Z+6	; 0x06
 d58:	57 81       	ldd	r21, Z+7	; 0x07
 d5a:	24 81       	ldd	r18, Z+4	; 0x04
 d5c:	35 81       	ldd	r19, Z+5	; 0x05
 d5e:	42 17       	cp	r20, r18
 d60:	53 07       	cpc	r21, r19
 d62:	44 f4       	brge	.+16     	; 0xd74 <fputc+0x38>
 d64:	a0 81       	ld	r26, Z
 d66:	b1 81       	ldd	r27, Z+1	; 0x01
 d68:	9d 01       	movw	r18, r26
 d6a:	2f 5f       	subi	r18, 0xFF	; 255
 d6c:	3f 4f       	sbci	r19, 0xFF	; 255
 d6e:	31 83       	std	Z+1, r19	; 0x01
 d70:	20 83       	st	Z, r18
 d72:	8c 93       	st	X, r24
 d74:	26 81       	ldd	r18, Z+6	; 0x06
 d76:	37 81       	ldd	r19, Z+7	; 0x07
 d78:	2f 5f       	subi	r18, 0xFF	; 255
 d7a:	3f 4f       	sbci	r19, 0xFF	; 255
 d7c:	37 83       	std	Z+7, r19	; 0x07
 d7e:	26 83       	std	Z+6, r18	; 0x06
 d80:	14 c0       	rjmp	.+40     	; 0xdaa <fputc+0x6e>
 d82:	8b 01       	movw	r16, r22
 d84:	ec 01       	movw	r28, r24
 d86:	fb 01       	movw	r30, r22
 d88:	00 84       	ldd	r0, Z+8	; 0x08
 d8a:	f1 85       	ldd	r31, Z+9	; 0x09
 d8c:	e0 2d       	mov	r30, r0
 d8e:	09 95       	icall
 d90:	89 2b       	or	r24, r25
 d92:	e1 f6       	brne	.-72     	; 0xd4c <fputc+0x10>
 d94:	d8 01       	movw	r26, r16
 d96:	16 96       	adiw	r26, 0x06	; 6
 d98:	8d 91       	ld	r24, X+
 d9a:	9c 91       	ld	r25, X
 d9c:	17 97       	sbiw	r26, 0x07	; 7
 d9e:	01 96       	adiw	r24, 0x01	; 1
 da0:	17 96       	adiw	r26, 0x07	; 7
 da2:	9c 93       	st	X, r25
 da4:	8e 93       	st	-X, r24
 da6:	16 97       	sbiw	r26, 0x06	; 6
 da8:	ce 01       	movw	r24, r28
 daa:	df 91       	pop	r29
 dac:	cf 91       	pop	r28
 dae:	1f 91       	pop	r17
 db0:	0f 91       	pop	r16
 db2:	08 95       	ret

00000db4 <__ultoa_invert>:
 db4:	fa 01       	movw	r30, r20
 db6:	aa 27       	eor	r26, r26
 db8:	28 30       	cpi	r18, 0x08	; 8
 dba:	51 f1       	breq	.+84     	; 0xe10 <__ultoa_invert+0x5c>
 dbc:	20 31       	cpi	r18, 0x10	; 16
 dbe:	81 f1       	breq	.+96     	; 0xe20 <__ultoa_invert+0x6c>
 dc0:	e8 94       	clt
 dc2:	6f 93       	push	r22
 dc4:	6e 7f       	andi	r22, 0xFE	; 254
 dc6:	6e 5f       	subi	r22, 0xFE	; 254
 dc8:	7f 4f       	sbci	r23, 0xFF	; 255
 dca:	8f 4f       	sbci	r24, 0xFF	; 255
 dcc:	9f 4f       	sbci	r25, 0xFF	; 255
 dce:	af 4f       	sbci	r26, 0xFF	; 255
 dd0:	b1 e0       	ldi	r27, 0x01	; 1
 dd2:	3e d0       	rcall	.+124    	; 0xe50 <__ultoa_invert+0x9c>
 dd4:	b4 e0       	ldi	r27, 0x04	; 4
 dd6:	3c d0       	rcall	.+120    	; 0xe50 <__ultoa_invert+0x9c>
 dd8:	67 0f       	add	r22, r23
 dda:	78 1f       	adc	r23, r24
 ddc:	89 1f       	adc	r24, r25
 dde:	9a 1f       	adc	r25, r26
 de0:	a1 1d       	adc	r26, r1
 de2:	68 0f       	add	r22, r24
 de4:	79 1f       	adc	r23, r25
 de6:	8a 1f       	adc	r24, r26
 de8:	91 1d       	adc	r25, r1
 dea:	a1 1d       	adc	r26, r1
 dec:	6a 0f       	add	r22, r26
 dee:	71 1d       	adc	r23, r1
 df0:	81 1d       	adc	r24, r1
 df2:	91 1d       	adc	r25, r1
 df4:	a1 1d       	adc	r26, r1
 df6:	20 d0       	rcall	.+64     	; 0xe38 <__ultoa_invert+0x84>
 df8:	09 f4       	brne	.+2      	; 0xdfc <__ultoa_invert+0x48>
 dfa:	68 94       	set
 dfc:	3f 91       	pop	r19
 dfe:	2a e0       	ldi	r18, 0x0A	; 10
 e00:	26 9f       	mul	r18, r22
 e02:	11 24       	eor	r1, r1
 e04:	30 19       	sub	r19, r0
 e06:	30 5d       	subi	r19, 0xD0	; 208
 e08:	31 93       	st	Z+, r19
 e0a:	de f6       	brtc	.-74     	; 0xdc2 <__ultoa_invert+0xe>
 e0c:	cf 01       	movw	r24, r30
 e0e:	08 95       	ret
 e10:	46 2f       	mov	r20, r22
 e12:	47 70       	andi	r20, 0x07	; 7
 e14:	40 5d       	subi	r20, 0xD0	; 208
 e16:	41 93       	st	Z+, r20
 e18:	b3 e0       	ldi	r27, 0x03	; 3
 e1a:	0f d0       	rcall	.+30     	; 0xe3a <__ultoa_invert+0x86>
 e1c:	c9 f7       	brne	.-14     	; 0xe10 <__ultoa_invert+0x5c>
 e1e:	f6 cf       	rjmp	.-20     	; 0xe0c <__ultoa_invert+0x58>
 e20:	46 2f       	mov	r20, r22
 e22:	4f 70       	andi	r20, 0x0F	; 15
 e24:	40 5d       	subi	r20, 0xD0	; 208
 e26:	4a 33       	cpi	r20, 0x3A	; 58
 e28:	18 f0       	brcs	.+6      	; 0xe30 <__ultoa_invert+0x7c>
 e2a:	49 5d       	subi	r20, 0xD9	; 217
 e2c:	31 fd       	sbrc	r19, 1
 e2e:	40 52       	subi	r20, 0x20	; 32
 e30:	41 93       	st	Z+, r20
 e32:	02 d0       	rcall	.+4      	; 0xe38 <__ultoa_invert+0x84>
 e34:	a9 f7       	brne	.-22     	; 0xe20 <__ultoa_invert+0x6c>
 e36:	ea cf       	rjmp	.-44     	; 0xe0c <__ultoa_invert+0x58>
 e38:	b4 e0       	ldi	r27, 0x04	; 4
 e3a:	a6 95       	lsr	r26
 e3c:	97 95       	ror	r25
 e3e:	87 95       	ror	r24
 e40:	77 95       	ror	r23
 e42:	67 95       	ror	r22
 e44:	ba 95       	dec	r27
 e46:	c9 f7       	brne	.-14     	; 0xe3a <__ultoa_invert+0x86>
 e48:	00 97       	sbiw	r24, 0x00	; 0
 e4a:	61 05       	cpc	r22, r1
 e4c:	71 05       	cpc	r23, r1
 e4e:	08 95       	ret
 e50:	9b 01       	movw	r18, r22
 e52:	ac 01       	movw	r20, r24
 e54:	0a 2e       	mov	r0, r26
 e56:	06 94       	lsr	r0
 e58:	57 95       	ror	r21
 e5a:	47 95       	ror	r20
 e5c:	37 95       	ror	r19
 e5e:	27 95       	ror	r18
 e60:	ba 95       	dec	r27
 e62:	c9 f7       	brne	.-14     	; 0xe56 <__ultoa_invert+0xa2>
 e64:	62 0f       	add	r22, r18
 e66:	73 1f       	adc	r23, r19
 e68:	84 1f       	adc	r24, r20
 e6a:	95 1f       	adc	r25, r21
 e6c:	a0 1d       	adc	r26, r0
 e6e:	08 95       	ret

00000e70 <__prologue_saves__>:
 e70:	2f 92       	push	r2
 e72:	3f 92       	push	r3
 e74:	4f 92       	push	r4
 e76:	5f 92       	push	r5
 e78:	6f 92       	push	r6
 e7a:	7f 92       	push	r7
 e7c:	8f 92       	push	r8
 e7e:	9f 92       	push	r9
 e80:	af 92       	push	r10
 e82:	bf 92       	push	r11
 e84:	cf 92       	push	r12
 e86:	df 92       	push	r13
 e88:	ef 92       	push	r14
 e8a:	ff 92       	push	r15
 e8c:	0f 93       	push	r16
 e8e:	1f 93       	push	r17
 e90:	cf 93       	push	r28
 e92:	df 93       	push	r29
 e94:	cd b7       	in	r28, 0x3d	; 61
 e96:	de b7       	in	r29, 0x3e	; 62
 e98:	ca 1b       	sub	r28, r26
 e9a:	db 0b       	sbc	r29, r27
 e9c:	0f b6       	in	r0, 0x3f	; 63
 e9e:	f8 94       	cli
 ea0:	de bf       	out	0x3e, r29	; 62
 ea2:	0f be       	out	0x3f, r0	; 63
 ea4:	cd bf       	out	0x3d, r28	; 61
 ea6:	09 94       	ijmp

00000ea8 <__epilogue_restores__>:
 ea8:	2a 88       	ldd	r2, Y+18	; 0x12
 eaa:	39 88       	ldd	r3, Y+17	; 0x11
 eac:	48 88       	ldd	r4, Y+16	; 0x10
 eae:	5f 84       	ldd	r5, Y+15	; 0x0f
 eb0:	6e 84       	ldd	r6, Y+14	; 0x0e
 eb2:	7d 84       	ldd	r7, Y+13	; 0x0d
 eb4:	8c 84       	ldd	r8, Y+12	; 0x0c
 eb6:	9b 84       	ldd	r9, Y+11	; 0x0b
 eb8:	aa 84       	ldd	r10, Y+10	; 0x0a
 eba:	b9 84       	ldd	r11, Y+9	; 0x09
 ebc:	c8 84       	ldd	r12, Y+8	; 0x08
 ebe:	df 80       	ldd	r13, Y+7	; 0x07
 ec0:	ee 80       	ldd	r14, Y+6	; 0x06
 ec2:	fd 80       	ldd	r15, Y+5	; 0x05
 ec4:	0c 81       	ldd	r16, Y+4	; 0x04
 ec6:	1b 81       	ldd	r17, Y+3	; 0x03
 ec8:	aa 81       	ldd	r26, Y+2	; 0x02
 eca:	b9 81       	ldd	r27, Y+1	; 0x01
 ecc:	ce 0f       	add	r28, r30
 ece:	d1 1d       	adc	r29, r1
 ed0:	0f b6       	in	r0, 0x3f	; 63
 ed2:	f8 94       	cli
 ed4:	de bf       	out	0x3e, r29	; 62
 ed6:	0f be       	out	0x3f, r0	; 63
 ed8:	cd bf       	out	0x3d, r28	; 61
 eda:	ed 01       	movw	r28, r26
 edc:	08 95       	ret

00000ede <_exit>:
 ede:	f8 94       	cli

00000ee0 <__stop_program>:
 ee0:	ff cf       	rjmp	.-2      	; 0xee0 <__stop_program>
